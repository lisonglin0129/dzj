{"version":3,"sources":["assets/module/game/majiang/script/event/ActionEvent.js","assets/module/game/majiang/script/event/AnimEvent.js","assets/resources/script/lib/Audio.js","assets/resources/script/lib/Base64.js","assets/resources/script/components/BeiMiCard.js","assets/resources/script/components/BeiMiCommon.js","assets/resources/script/components/BeiMiDialog.js","assets/resources/script/business/BeiMiQR.js","assets/resources/script/components/BeiMiRoomOption.js","assets/resources/script/components/BeiMiTimer.js","assets/module/hall/script/DefaultHallDataBind.js","assets/module/game/majiang/script/cards/DeskCards.js","assets/module/game/dizhu/script/DiZhuSummaryClick.js","assets/module/hall/script/menu/DialogClick.js","assets/module/game/dizhu/script/DizhuBegin.js","assets/module/game/dizhu/script/DizhuButton.js","assets/module/game/dizhu/script/DizhuDataBind.js","assets/resources/script/components/EventStop.js","assets/module/hall/script/menu/FeedBackDialog.js","assets/module/game/dizhu/script/GameMenu.js","assets/module/hall/script/GameRoom.js","assets/resources/script/business/GameTimer.js","assets/module/game/majiang/script/kong/GangAction.js","assets/resources/script/lib/HTTP.js","assets/module/game/majiang/script/cards/HandCards.js","assets/resources/script/components/IOUtils.js","assets/module/hall/script/menu/JoinRoomClick.js","assets/module/game/majiang/script/event/JoinRoomEvent.js","assets/module/hall/script/menu/LogoutClick.js","assets/module/game/majiang/script/MJMenuClick.js","assets/module/game/majiang/script/MaJiangPlayer.js","assets/module/game/majiang/script/MaJiangSummary.js","assets/module/game/majiang/script/MajiangDataBind.js","assets/module/hall/script/menu/MenuClick.js","assets/module/hall/script/menu/MessageDialog.js","assets/module/hall/script/PlayGame.js","assets/module/game/dizhu/script/PlayPoker.js","assets/resources/script/business/PlayerRender.js","assets/module/game/majiang/script/event/PlayersEvent.js","assets/module/hall/script/PlaywayClick.js","assets/module/hall/script/room/PlaywayGroup.js","assets/module/hall/script/Playway.js","assets/module/game/majiang/script/Ready.js","assets/module/hall/script/room/RoomClick.js","assets/module/hall/script/room/RoomOption.js","assets/module/hall/script/RoomPlayway.js","assets/module/hall/script/Room.js","assets/module/game/dizhu/script/SelectColor.js","assets/module/hall/script/SelectPlayway.js","assets/module/hall/script/menu/SettingClide.js","assets/module/game/majiang/script/cards/SpecCards.js","assets/module/game/majiang/script/summary/SummaryClick.js","assets/module/game/dizhu/script/SummaryDetail.js","assets/module/game/majiang/script/cards/TakeMJCard.js","assets/module/login/script/common.js","assets/module/login/script/form.js","assets/module/login/script/init.js","assets/resources/script/components/logindialog.js","assets/resources/script/lib/socket.io.js"],"names":["beiMiCommon","require","cc","Class","extends","properties","onLoad","onClick","event","data","this","node","dispatchEvent","Event","EventCustom","Component","onAnimCompleted","destroy","bgVolume","deskVolume","bgAudioID","init","t","sys","localStorage","getItem","parseFloat","game","on","EVENT_HIDE","audioEngine","pauseAll","EVENT_SHOW","resumeAll","getUrl","url","raw","playBGM","audioUrl","stop","play","playSFX","sfxVolume","setSFXVolume","v","setItem","getState","setBGMVolume","force","AudioState","PAUSED","resume","pause","bgmVolume","setVolume","statics","decode","_base64Str","BASE64_MAPPING","_len","length","extra_Zero_Count","charAt","substring","binaryArray","i","len","c","j","size","_tmp","_toBinary","_tmpLen","k","unshift","concat","slice","unicode","unicodeBinary","_toDecimal","sum","ascii","binary","Array","b","Math","floor","push","reverse","dec","p","pow","card","Integer","initcard","default","type","Node","normal","lefttop","leftcolor","rightbottom","rightcolor","kingbg","king","atlas","SpriteAtlas","proxy","active","selected","setCard","y","unselected","doselect","order","frame","cardframe","cardvalue","getSpriteFrame","src","getComponent","Sprite","spriteFrame","reset","Base64","beimi","room_callback","ready","check","scene","connect","self","socket","disconnect","window","io","http","wsURL","reconnection","console","log","param","token","authorization","orgi","user","userid","id","exec","result","parse","extparams","gamestatus","gametype","playway","cardroom","gamemodel","sessiontimeout","alert","registercallback","callback","cleancallback","getCommon","common","find","loadding","loaddingDialog","get","parent","_animCtrl","Animation","wrapMode","WrapMode","Loop","message","alertForCallBack","func","dialog","alertdialog","getChildByName","Label","string","temp","closeloadding","put","closeOpenWin","openwin","openWin","prefab","instantiate","root","pvalistener","context","listener","cleanpvalistener","pva","pvatype","balance","goldcoins","cards","diamonds","updatepva","subsidy","needsubsidy","subtimes","subgolds","lefttimes","tipmsg","submsg","welfareDialog","recmsg","shopDialog","loader","loadRes","err","resize","win","director","getWinSize","view","setDesignResolutionSize","width","height","ResolutionPolicy","EXACT_FIT","closealert","name","preloadScene","loadScene","preload","JSON","games","logout","map","command","routes","cleanmap","route","layout","target","children","inx","removeChild","sort","splice","EventType","TOUCH_START","e","stopPropagation","onClose","qrgraphics","roomid","qrcode","QRCode","QRErrorCorrectLevel","H","addData","make","num","getModuleCount","ctx","Graphics","clear","fillColor","Color","BLACK","tileW","tileH","row","col","isDark","w","ceil","h","rect","round","fill","script","roomplayway","roomoption","text","time","remaining","schedule","unschedule","username","girl","pva_format","coins","object","toFixed","playToLeft","_girlAnimCtrl","playToRight","onDestroy","beimi0","cvalue","value","cardcolors","parseInt","cardtype","deskcard","onBegin","opendeal","onCloseClick","gamebtn","continuegamebtn","poker","lastCardsPanel","waitting","Prefab","ratio","summary_win","summary","inviteplayer","player","pokercards","lastcards","summarypage","inited","lasttip","recovery","invite","initgame","begin","enableai","statictimer","waittime","noaiwaitime","startgame","joinroom_event","players_event","catch_event","catchresult_event","lasthands_event","takecards_event","ratio_event","play_event","allcards_event","cardtips_event","roomready_event","playeready_event","recovery_event","index","inroom","newplayer","pos","playerexist","maxplayers","catchtimer","render","mycards","waittimer","timer","doLastCards","_pokencard","playcards","registerProxy","lasthands","last","banker","getPlayer","setDizhuFlag","lasttakecards","cardsnum","nextplayer","playtimer","automic","resetcards","bomb","catchresult","setTimeout","hideresult","callFunc","tempcontext","fir","sec","zIndex","_pc","current","pc","allow","donot","selectedcards","over","notallow","tipcards","join","cardtips","cardtipsfornot","center","pokerpool","left","right","setPosition","finished","dealing","reordering","players","create","gameRoomOver","clean","tempRender","times","myCards","otherplayer","currpoker","seq","sequence","spawn","moveTo","scaleTo","runAction","_seq","countcards","minpokerpool","myCard","posx","setScale","action","isRight","v2","playerspool","initplayer","givup","emit","docatch","doPlayCards","noCards","restart","continuegame","back","poker_min","myself","catchbtn","timer_num","playbtn","operesult","donottake","cardtipmsg","NodePool","myselfpool","cardslist","playermysql","gameTimer","beimitimer","timesrc","runtimer","stoptimer","doOperatorResult","jsq","sameside","cacheCard","x","countcard","count","oper","resvalue","doSelectCard","undefined","pokercard","doUnSelectCard","indexOf","title_feedback","title_reply","onFeedBack","onReply","roomidDialog","onClickJoinRoom","source","timernode","timer_first","timer_sec","timersrc","unscheduleAllCallbacks","card_one","card_two","card_three","card_four","card_last","gang","mjtype","mjvalue","VERSION","HTTP","baseURL","httpGet","success","error","xhr","getXMLHttpRequest","onreadystatechange","readyState","status","respone","responseText","open","isNative","setRequestHeader","ontimeout","onerror","timeout","send","encodeFormData","pairs","regexp","toString","pair","encodeURIComponent","replace","httpPost","params","lastonecard","take","lastone","opacity","selectcolor","relastone","reinit","key","remove","removeItem","numdata","disRoomId","roomCallBack","code","onDeleteClick","onCleanClick","onBackClick","creator","selectcards","playerdata","tablepos","selecting","ani","animState","repeatCount","selectresult","color","workitem","myscore","myflag","player_1","player_1_flag","player_1_name","player_1_score","player_2","player_2_flag","player_2_name","player_2_score","playerprefab","statebtn","mjtimer","desk_tip","desk_cards","cards_current","cards_panel","one_card_panel","left_panel","right_panel","top_panel","cards_left","cards_right","cards_top","takecards_one","takecards_left","takecards_right","deskcards_current_panel","deskcards_right_panel","deskcards_top_panel","deskcards_left_panel","searchlight","actionnode_two","actionnode_two_list","actionnode_three","actionnode_three_list","actionnode_deal","action_gang_ming_prefab","action_gang_an_prefab","cards_gang_ming_prefab","cards_gang_an_prefab","gang_current","hu_cards_current","hu_cards_top","hu_cards_left","hu_cards_right","mask","initdata","playersarray","playercards","leftcards","rightcards","topcards","deskcards","actioncards","centertimer","exchange_state","card_script","dealActionProcess","banker_event","selectcolor_event","selectresult_event","takecard_event","action_event","selectaction_event","dealcard_event","cardpool","playerscript","handcards","desk_card","_temp","cardpanel","cardprefab","deskcardpanel","_desk_card","recover_desk_cards","_temp2","_desk_card2","select_action_searchlight","initDealHandCards","initPlayerHandCards","exchange_searchlight","gameover","recoverboard","setAction","collect","userboard","hiscards","peng","chi","hu","guo","deal","actionNum","_temp4","actionevent","easing","easeIn","hu_card","_temp6","cards_gang","temp_script","actype","_temp7","_script","_temp8","temp_player","calcdesc_cards","groupNums","initMjCards","playuser","maxvalluecard","maxvalue","changecolor","lastcard","start","end","spec","cardarray","initOtherCards","group","cardsarray","_loop","waittingForPlayers","pid","_temp10","state","readybtn","selectbtn","canceltimer","direction","setting","share","feedback","onSettingClick","onMessageClick","onShareClick","onPlaywayClick","onRecordClick","onFeedBackClick","title_message","title_contact","onContacts","onMessage","onClickDizhu","posy","takecard","beiMiCard","dizhu","pokertag","headimg","cannot","cardcount","Layout","horizontalDirection","takecards","dograb","grab","tipdonot","tipcannot","thisplayway","createRoom","grouptitle","groupbox","groupbox_four","content","itemname","checkbox","checkboxnode","checked","options","doUnChecked","doChecked","itempre","items","parentoptions","groupoptions","itemsnum","groupid","newitem","style","inititem","item","defaultvalue","tag","score","onlineusers","scorelimit","frameName","level","shuffle","skin","min","mincoins","max","maxcoins","onCreateRoom","memo","optionsnode","roomtitle","optiongroup","optiongroupitem","memonode","createroom","freeopt","groupitem","option","free","groups","playWayGroup","playwaypool","playwayarray","playways","first","second","gamepoint","title","global","disMenu","gameenable","types","_secondAnimCtrl","onRoomClick","_menuDisplay","third","onSecondBack","onThirddBack","music","musicSlider","Slider","sound","soundSlider","musicon","musicoff","soundon","soundoff","progress","audio","fillRange","PLAYING","onMusicSlide","slider","onSoundSlide","onMusiceBtnClick","onBGClick","onBeginClick","process","flag","clickstate","handCards","login","sucess","EditBox","password","_prefab","submit","guest","_progress","_splash","_isLoading","loaddingPrefab","alertPrefab","isMobile","canvas","Canvas","fitHeight","fitWidth","initMgr","seckey","model","Audio","SocketIO","Button","prototype","touchEndedClone","_onTouchEnded","_soundOn","setSoundEffect","interactable","enabledInHierarchy","_pressed","loginFormPool","ws","WebSocket","onopen","onmessage","onclose","OPEN","stringify"],"mappings":"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","sourcesContent":["var beiMiCommon = require(\"BeiMiCommon\");\n\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(event , data){\n        this.node.dispatchEvent( new cc.Event.EventCustom(data, true) );\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    onAnimCompleted: function () {\n        this.node.destroy();\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        bgVolume:1.0,           // 背景音量\n\n        deskVolume:1.0,         //   房间 房间音量\n        \n        bgAudioID:-1            //   背景 音乐  id\n    },\n\n    // use this for initialization\n    init: function () {\n        var t = cc.sys.localStorage.getItem(\"bgVolume\");\n        if(t != null){\n            this.bgVolume = parseFloat(t);    \n        }\n        \n        var t = cc.sys.localStorage.getItem(\"deskVolume\");\n\n        if(t != null){\n            this. deskVolume = parseFloat(t);    \n        }\n        \n        cc.game.on(cc.game.EVENT_HIDE, function () {\n            cc.audioEngine.pauseAll();\n        });\n        cc.game.on(cc.game.EVENT_SHOW, function () {\n            cc.audioEngine.resumeAll();\n        });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n    \n    getUrl:function(url){\n        return cc.url.raw(\"resources/sounds/\" + url);\n    },\n    \n    playBGM:function(url){\n        var audioUrl = this.getUrl(url);\n        if(this.bgAudioID >= 0){\n            cc.audioEngine.stop(this.bgAudioID);\n        }\n        this.bgAudioID = cc.audioEngine.play(audioUrl,true,this.bgVolume);\n    },\n    \n    playSFX:function(url){\n        var audioUrl = this.getUrl(url);\n        if(this.sfxVolume > 0){\n            var audioId = cc.audioEngine.play(audioUrl,false,this.deskVolume);    \n        }\n    },\n    \n    setSFXVolume:function(v){\n        if(this.sfxVolume != v){\n            cc.sys.localStorage.setItem(\"deskVolume\",v);\n            this.deskVolume = v;\n        }\n    },\n    getState:function(){\n        return cc.audioEngine.getState(this.bgAudioID);\n    },\n    setBGMVolume:function(v,force){\n        if(this.bgAudioID >= 0){\n            if(v > 0 && cc.audioEngine.getState(this.bgAudioID) === cc.audioEngine.AudioState.PAUSED){\n                cc.audioEngine.resume(this.bgAudioID);\n            }else if(v == 0){\n                cc.audioEngine.pause(this.bgAudioID);\n            }\n        }\n        if(this.bgVolume != v || force){\n            cc.sys.localStorage.setItem(\"bgVolume\",v);\n            this.bgmVolume = v;\n            cc.audioEngine.setVolume(this.bgAudioID,v);\n        }\n    },\n    \n    pauseAll:function(){\n        cc.audioEngine.pauseAll();\n    },\n    \n    resumeAll:function(){\n        cc.audioEngine.resumeAll();\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n    statics:{\n\n        decode : function(_base64Str){\n            var BASE64_MAPPING = [\n                'A','B','C','D','E','F','G','H',\n                'I','J','K','L','M','N','O','P',\n                'Q','R','S','T','U','V','W','X',\n                'Y','Z','a','b','c','d','e','f',\n                'g','h','i','j','k','l','m','n',\n                'o','p','q','r','s','t','u','v',\n                'w','x','y','z','0','1','2','3',\n                '4','5','6','7','8','9','+','/'\n            ];\n            var _len = _base64Str.length;\n            var extra_Zero_Count = 0;\n            /**\n             *计算在进行BASE64编码的时候，补了几个0\n             */\n            if(_base64Str.charAt(_len-1) == '='){\n                //alert(_base64Str.charAt(_len-1));\n                //alert(_base64Str.charAt(_len-2));\n                if(_base64Str.charAt(_len-2) == '='){//两个等号说明补了4个0\n                    extra_Zero_Count = 4;\n                    _base64Str = _base64Str.substring(0 , _len-2);\n                }else{//一个等号说明补了2个0\n                    extra_Zero_Count = 2;\n                    _base64Str = _base64Str.substring(0 , _len - 1);\n                }\n            }\n\n            var binaryArray = [];\n            for(var i = 0 , len = _base64Str.length; i < len ; ++i){\n                var c = _base64Str.charAt(i);\n                for(var j = 0 , size = BASE64_MAPPING.length ; j < size ; ++j){\n                    if(c == BASE64_MAPPING[j]){\n                        var _tmp = this._toBinary(j);\n                        /*不足6位的补0*/\n                        var _tmpLen = _tmp.length;\n                        if(6-_tmpLen > 0){\n                            for(var k = 6-_tmpLen ; k > 0 ; --k){\n                                _tmp.unshift(0);\n                            }\n                        }\n                        binaryArray = binaryArray.concat(_tmp);\n                        break;\n                    }\n                }\n            }\n\n            if(extra_Zero_Count > 0){\n                binaryArray = binaryArray.slice(0 , binaryArray.length - extra_Zero_Count);\n            }\n\n            var unicode = [];\n            var unicodeBinary = [];\n            for(var i = 0 , len = binaryArray.length ; i < len ; ){\n                if(binaryArray[i] == 0){\n                    unicode=unicode.concat(this._toDecimal(binaryArray.slice(i,i+8)));\n                    i += 8;\n                }else{\n                    var sum = 0;\n                    while(i < len){\n                        if(binaryArray[i] == 1){\n                            ++sum;\n                        }else{\n                            break;\n                        }\n                        ++i;\n                    }\n                    unicodeBinary = unicodeBinary.concat(binaryArray.slice(i+1 , i+8-sum));\n                    i += 8 - sum;\n                    while(sum > 1){\n                        unicodeBinary = unicodeBinary.concat(binaryArray.slice(i+2 , i+8));\n                        i += 8;\n                        --sum;\n                    }\n                    unicode = unicode.concat(this._toDecimal(unicodeBinary));\n                    unicodeBinary = [];\n                }\n            }\n            return unicode;\n        },\n        _toBinary : function(ascii){\n            var binary = new Array();\n            while(ascii > 0){\n                var b = ascii%2;\n                ascii = Math.floor(ascii/2);\n                binary.push(b);\n            }\n            /*\n            var len = binary.length;\n            if(6-len > 0){\n                for(var i = 6-len ; i > 0 ; --i){\n                    binary.push(0);\n                }\n            }*/\n            binary.reverse();\n            return binary;\n        },\n        _toDecimal : function(binary){\n            var dec = 0;\n            var p = 0;\n            for(var i = binary.length-1 ; i >= 0 ; --i){\n                var b = binary[i];\n                if(b == 1){\n                    dec += Math.pow(2 , p);\n                }\n                ++p;\n            }\n            return dec;\n        }\n    },\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        card : cc.Integer,\n        initcard :  {\n            default: null,\n            type: cc.Node\n        },\n        normal: {\n            default: null,\n            type: cc.Node\n        },\n        lefttop: {\n            default: null,\n            type: cc.Node\n        },\n        leftcolor: {\n            default: null,\n            type: cc.Node\n        },\n        rightbottom: {\n            default: null,\n            type: cc.Node\n        },\n        rightcolor: {\n            default: null,\n            type: cc.Node\n        },\n        kingbg:{\n            default: null,\n            type: cc.Node\n        },\n        king: {\n            default: null,\n            type: cc.Node\n        },\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        }\n    },\n    proxy:function(data){\n        this.game = data ;\n    },\n    // use this for initialization\n    onLoad: function () {\n        this.initcard.active = true ;\n        this.normal.active = false;\n        this.selected = false ;\n        this.kingbg.active = false ;\n    },\n    setCard:function(card){\n        this.card = card ;\n        this.normal.y = 0;\n        this.normal.active = false;\n        this.kingbg.y = 0 ;\n        this.kingbg.active = false ;\n    },\n    unselected:function(){\n        if(this.selected){\n            if(this.card >= 52){\n                this.kingbg.y = 0;\n            }else{\n                this.normal.y = 0;\n            }\n        }\n        this.selected = false ;\n    },\n    doselect:function(){\n        if(this.selected == false){\n            if(this.card >= 52) {\n                this.kingbg.y = this.kingbg.y + 30;\n            }else{\n                this.normal.y = this.normal.y + 30;\n            }\n            this.selected = true ;\n        }else{\n            this.unselected();\n        }\n    },\n    order:function(){\n        let self = this ;\n        var frame , cardframe ;\n        if(self.card < 52){\n            var cardvalue = self.card+1 ;\n            if(cardvalue % 4 == 0){\n                frame = this.atlas.getSpriteFrame('方片');\n            }else if(cardvalue % 4 == 1){\n                frame = this.atlas.getSpriteFrame('黑桃');\n            }else if(cardvalue % 4 == 2){\n                frame = this.atlas.getSpriteFrame('红心');\n            }else if(cardvalue % 4 == 3){\n                frame = this.atlas.getSpriteFrame('梅花');\n            }\n            var src = (self.card  - self.card % 4 ) / 4 + 1 + 2;\n            if(src == 14){\n                src = 1 ;\n            }else if(src == 15){\n                src = 2 ;\n            }\n            if(self.card % 2 == 0){\n                cardframe = this.atlas.getSpriteFrame(src);\n            }else{\n                cardframe = this.atlas.getSpriteFrame('r'+src);\n            }\n            this.leftcolor.getComponent(cc.Sprite).spriteFrame = frame;\n            this.lefttop.getComponent(cc.Sprite).spriteFrame = cardframe;\n            this.rightcolor.getComponent(cc.Sprite).spriteFrame = frame;\n            this.rightbottom.getComponent(cc.Sprite).spriteFrame = cardframe;\n\n\n            this.initcard.active = false ;\n            this.normal.active = true ;\n            this.kingbg.active = false ;\n            this.normal.y = 0 ;\n        }else if(self.card == 52){\n            frame = this.atlas.getSpriteFrame('小王_大');\n            this.king.getComponent(cc.Sprite).spriteFrame = frame;\n            this.initcard.active = false ;\n            this.normal.active = false;\n            this.kingbg.active = true ;\n            this.kingbg.y = 0 ;\n        }else if(self.card == 53){\n            frame = this.atlas.getSpriteFrame('大王_大');\n            this.king.getComponent(cc.Sprite).spriteFrame = frame;\n            this.initcard.active = false ;\n            this.normal.active = false;\n            this.kingbg.active = true ;\n            this.kingbg.y = 0 ;\n        }\n    },\n    reset:function(){\n        this.normal.y = 0;\n        this.kingbg.y = 0;\n        this.normal.active = false;\n        this.kingbg.active = false;\n    }\n\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var Base64 = require(\"Base64\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        cc.beimi.room_callback = null ;  //加入房间回调函数\n    },\n    ready:function(){\n        var check = false ;\n        if(cc.beimi){\n            check = true ;\n        }else{\n            this.scene(\"login\" , this) ;\n        }\n        return check ;\n    },\n    connect:function(){\n        let self = this ;\n        /**\n         * 登录成功后，创建 Socket链接，\n         */\n        if(cc.beimi.socket != null){\n            cc.beimi.socket.disconnect();\n            cc.beimi.socket = null ;\n        }\n        cc.beimi.socket = window.io.connect(cc.beimi.http.wsURL + '/bm/game',{\"reconnection\":true});\n\n\n        cc.game.on(cc.game.EVENT_HIDE, function(event) {\n            //self.alert(\"HIDE TRUE\");\n        });\n        cc.game.on(cc.game.EVENT_SHOW, function(event) {\n            console.log(\"SHOW TRUE\");\n            //self.alert(\"SHOW TRUE\");\n        });\n\n        cc.beimi.socket.on('connect', function (data) {\n            console.log(\"connected to server\");\n            //self.alert(\"connected to server\");\n        });\n\n        cc.beimi.socket.on('disconnect', function (data) {\n            console.log(\"disconnected from server\");\n            //self.alert(\"disconnected from server\");\n\n        });\n        var param = {\n            token:cc.beimi.authorization,\n            orgi:cc.beimi.user.orgi,\n            userid:cc.beimi.user.id\n        } ;\n        cc.beimi.socket.exec(\"gamestatus\" , param);\n        cc.beimi.socket.on(\"gamestatus\" , function(result){\n            if(result!=null) {\n                var data = self.parse(result) ;\n                if(cc.beimi.extparams !=null){\n                    if(data.gamestatus == \"playing\" && data.gametype != null){\n                        /**\n                         * 修正重新进入房间后 玩法被覆盖的问题，从服务端发送过来的 玩法数据是 当前玩家所在房间的玩法，是准确的\n                         */\n                        if(cc.beimi.extparams!=null){\n                            cc.beimi.extparams.playway = data.playway ;\n                            cc.beimi.extparams.gametype = data.gametype ;\n                            if(data.cardroom!=null && data.cardroom == true){\n                                cc.beimi.extparams.gamemodel = \"room\";\n                            }\n                        }\n                        self.scene(data.gametype , self) ;\n                    }else if(data.gamestatus == \"timeout\"){ //会话过期，退出登录 ， 会话时间由后台容器提供控制\n                        cc.beimi.sessiontimeout = true ;\n                        self.alert(\"登录已过期，请重新登录\") ;\n                    }else{\n                        self.scene(cc.beimi.extparams.gametype , self) ;\n                    }\n                }\n                cc.beimi.gamestatus = data.gamestatus;\n            }\n        });\n\n\n        /**\n         * 加入房卡模式的游戏类型 ， 需要校验是否是服务端发送的消息\n         */\n        cc.beimi.socket.on(\"searchroom\" , function(result){\n            //result 是 GamePlayway数据，如果找到了 房间数据，则进入房间，如果未找到房间数据，则提示房间不存在\n            if(result!=null && cc.beimi.room_callback!=null) {\n                cc.beimi.room_callback(result , self);\n            }\n        });\n        return cc.beimi.socket ;\n    },\n    disconnect:function(){\n        if(cc.beimi.socket != null){\n            cc.beimi.socket.disconnect();\n            cc.beimi.socket = null ;\n        }\n    },\n    registercallback:function(callback){\n        cc.beimi.room_callback = callback ;\n    },\n    cleancallback:function(){\n        cc.beimi.room_callback = null ;\n    },\n    getCommon:function(common){\n        var object = cc.find(\"Canvas/script/\"+common) ;\n        return object.getComponent(common);\n    },\n    loadding:function(){\n        if(cc.beimi.loadding.size() > 0){\n            this.loaddingDialog = cc.beimi.loadding.get();\n            this.loaddingDialog.parent = cc.find(\"Canvas\");\n\n            this._animCtrl = this.loaddingDialog.getComponent(cc.Animation);\n            var animState = this._animCtrl.play(\"loadding\");\n            animState.wrapMode = cc.WrapMode.Loop;\n        }\n    },\n    alert:function(message){\n        this.alertForCallBack(message , null);\n    },\n    alertForCallBack:function(message , func){\n        if(cc.beimi.dialog.size() > 0){\n            this.alertdialog = cc.beimi.dialog.get();\n            this.alertdialog.parent = cc.find(\"Canvas\");\n            let node = this.alertdialog.getChildByName(\"message\") ;\n            if(node!=null && node.getComponent(cc.Label)){\n                node.getComponent(cc.Label).string = message ;\n            }\n            if(func!=null){\n                let temp = this.alertdialog.getComponent(\"BeiMiDialog\") ;\n                if(temp!=null){\n                    temp.callback(func);\n                }\n            }\n        }\n        this.closeloadding();\n    },\n    closeloadding:function(){\n        if(cc.find(\"Canvas/loadding\")){\n            cc.beimi.loadding.put(cc.find(\"Canvas/loadding\"));\n        }\n    },\n    closeOpenWin:function(){\n        if(cc.beimi.openwin != null){\n            cc.beimi.openwin.destroy();\n            cc.beimi.openwin = null ;\n        }\n    },\n    openWin:function(prefab){\n        if(prefab!=null){\n            cc.beimi.openwin = cc.instantiate(prefab) ;\n            cc.beimi.openwin.parent = this.root();\n        }\n    },\n    pvalistener:function(context , func){\n        cc.beimi.listener = func ;\n        cc.beimi.context = context ;\n    },\n    cleanpvalistener:function(){\n        if(cc.beimi != null){\n            cc.beimi.listener = null ;\n            cc.beimi.context = null ;\n        }\n    },\n    pva:function(pvatype , balance){   //客户端资产变更（仅显示，多个地方都会调用 pva方法）\n        if(pvatype != null){\n            if(pvatype == \"gold\"){\n                cc.beimi.user.goldcoins = balance ;\n            }else if(pvatype == \"cards\"){\n                cc.beimi.user.cards = balance ;\n            }else if(pvatype == \"diamonds\"){\n                cc.beimi.user.diamonds = balance ;\n            }\n        }\n    },\n    updatepva:function(){\n        if(cc.beimi!=null && cc.beimi.listener != null && cc.beimi.context != null){\n            cc.beimi.listener(cc.beimi.context);\n        }\n    },\n    subsidy:function(){\n        var needsubsidy = false ;\n        if(cc.beimi.user.goldcoins <= 0){\n            let self = this ;\n            needsubsidy = true ;\n            //提示是否需要破产补助 , 提示的时候，需要查询服务端是否当天的 补助次数已用完，如果还有剩余补助次数，则开始补助，否则直接进入商城提示兑换 ， 剩余的补助次数，在服务器推送 PVA信息的时候，同时推送过来\n            if(cc.beimi.data.subsidy == true && cc.beimi.data.subtimes > 0 && cc.beimi.data.subgolds > 0 && cc.beimi.data.lefttimes >0){\n                // cc.loader.loadRes(\"prefab/welfare/over\", function (err, prefab) {\n                //     cc.beimi.openwin = cc.instantiate(prefab);\n                //     cc.beimi.openwin.parent = cc.beimi.context.root();\n                // });\n                let tipmsg = \"金币不足，您可以领取救济金。\";\n                if(cc.beimi.data.submsg != null){\n                    tipmsg = cc.beimi.data.submsg  ;\n                }\n                this.alertForCallBack( tipmsg, function(){\n                    self.welfareDialog();\n                });\n            }else{\n                let recmsg = \"金币不足，请充值。\" ;\n                if(cc.beimi.data.recmsg != null){\n                    recmsg = cc.beimi.data.recmsg  ;\n                }\n                this.alertForCallBack(recmsg , function(){\n                    self.shopDialog();\n                });\n            }\n        }\n        return needsubsidy ;\n    },\n    welfareDialog:function(){\n        cc.loader.loadRes(\"prefab/welfare/over\", function (err, prefab) {\n            cc.beimi.openwin = cc.instantiate(prefab);\n            cc.beimi.openwin.parent = cc.beimi.context.root();\n        });\n    },\n    shopDialog:function(){\n        cc.loader.loadRes(\"prefab/welfare/shop\", function (err, prefab) {\n            cc.beimi.openwin = cc.instantiate(prefab);\n            cc.beimi.openwin.parent = cc.beimi.context.root();\n        });\n    },\n    resize:function(){\n        let win = cc.director.getWinSize() ;\n        cc.view.setDesignResolutionSize(win.width, win.height, cc.ResolutionPolicy.EXACT_FIT);\n    },\n    closealert:function(){\n        if(cc.find(\"Canvas/alert\")){\n            cc.beimi.dialog.put(cc.find(\"Canvas/alert\"));\n        }\n    },\n    scene:function(name , self){\n        cc.director.preloadScene(name, function () {\n            if(cc.beimi){\n                self.closeloadding(self.loaddingDialog);\n            }\n            cc.director.loadScene(name);\n        });\n    },\n    preload:function(extparams , self){\n        this.loadding();\n        /**\n         *切换游戏场景之前，需要先检查是否 是在游戏中，如果是在游戏中，则直接进入该游戏，如果不在游戏中，则执行 新场景游戏\n         */\n        cc.beimi.extparams = extparams ;\n        /**\n         * 发送状态查询请求，如果玩家当前在游戏中，则直接进入游戏回复状态，如果玩家不在游戏中，则创建新游戏场景\n         */\n        var param = {\n            token:cc.beimi.authorization,\n            orgi:cc.beimi.user.orgi,\n            userid:cc.beimi.user.id\n        } ;\n        cc.beimi.socket.exec(\"gamestatus\" , param);\n    },\n    root:function(){\n        return cc.find(\"Canvas\");\n    },\n    decode:function(data){\n\n        return Base64.decode(data) ;\n    },\n    parse:function(result){\n        return JSON.parse(result) ;\n    },\n    reset:function(data , result){\n        //放在全局变量\n        cc.beimi.authorization = data.token.id ;\n        cc.beimi.user = data.data ;\n        cc.beimi.games = data.games ;\n        cc.beimi.gametype = data.gametype ;\n\n        cc.beimi.data = data ;\n        cc.beimi.playway = null ;\n        this.io.put(\"token\" ,data.token.id);\n    },\n    logout:function(){\n        this.closeOpenWin();\n        cc.beimi.authorization = null ;\n        cc.beimi.user = null ;\n        cc.beimi.games = null ;\n\n        cc.beimi.playway = null ;\n\n        this.disconnect();\n    },\n    socket:function(){\n        let socket = cc.beimi.socket ;\n        if(socket == null){\n            socket = this.connect();\n        }\n        return socket ;\n    },\n    map:function(command, callback){\n        if(cc.beimi!=null && cc.beimi.routes[command] == null){\n            cc.beimi.routes[command] = callback || function(){};\n        }\n    },\n    cleanmap:function(){\n        if(cc.beimi!=null && cc.beimi.routes != null){\n            //cc.beimi.routes.splice(0 , cc.beimi.routes.length) ;\n            for(var p in cc.beimi.routes){\n                delete cc.beimi.routes[p];\n            }\n        }\n    },\n    route:function(command){\n        return cc.beimi.routes[command] || function(){};\n    },\n    /**\n     * 解决Layout的渲染顺序和显示顺序不一致的问题\n     * @param target\n     * @param func\n     */\n    layout:function(target , func){\n        if(target != null){\n            let temp = new Array() ;\n            let children = target.children ;\n            for(var inx = 0 ; inx < children.length ; inx++){\n                temp.push(children[inx]) ;\n            }\n            for(var inx = 0 ; inx < temp.length ; inx++){\n                target.removeChild(temp[inx]) ;\n            }\n\n            temp.sort(func) ;\n            for(var inx =0 ; inx<temp.length ; inx++){\n                temp[inx].parent = target ;\n            }\n            temp.splice(0 , temp.length) ;\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.node.on(cc.Node.EventType.TOUCH_START, function(e){\n            e.stopPropagation();\n        });\n        /**\n         * 关闭ALERT的回调动作\n         */\n        this.node.on(\"close\", function (event) {\n            if(cc.beimi!=null && cc.beimi.sessiontimeout == true){\n                cc.beimi.sessiontimeout = null;\n                self.scene(\"login\" , self) ;\n            }\n            event.stopPropagation();\n        });\n    },\n    onClose:function(){\n        let dialog = cc.find(\"Canvas/alert\") ;\n        cc.beimi.dialog.put(dialog);\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"close\", true) );\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n\textends: beiMiCommon,\n\n\tproperties: {\n        qrgraphics:{\n            default : null ,\n            type : cc.Node\n        },\n        roomid:{\n            default : null ,\n            type : cc.Label\n        }\n\t},\n\n\t// use this for initialization\n\tonLoad: function() {\n\n\t},\n    init:function(data){\n\t    if(data!=null && data != \"\"){\n\t        this.roomid.string = \"让好友扫描加入房间，房间号：\"+data ;\n        }\n        var qrcode = new QRCode(6, QRErrorCorrectLevel.H);\n        qrcode.addData(data);\n\n        qrcode.make();\n\n        let size = this.qrgraphics.width;\n        let num = qrcode.getModuleCount();\n        var ctx = this.qrgraphics.getComponent(cc.Graphics);\n        ctx.clear();\n        ctx.fillColor = cc.Color.BLACK;\n        // compute tileW/tileH based on node width and height\n        var tileW = size / num;\n        var tileH = size / num;\n        // draw in the Graphics\n        for (var row = 0; row < num; row++) {\n            for (var col = 0; col < num; col++) {\n                if (qrcode.isDark(row, col)) {\n                    // cc.log(row, col)\n                    // ctx.fillColor = cc.Color.BLACK;\n                    var w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\n                    var h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW));\n                    ctx.rect(Math.round(col * tileW), size - tileH - Math.round(row * tileH), w, h);\n                    ctx.fill();\n                } else {\n                    // ctx.fillColor = cc.Color.WHITE;\n                }\n                // var w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\n                // var h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW));\n                // ctx.rect(Math.round(col * tileW), Math.round(row * tileH), w, h);\n                // ctx.fill();\n            }\n        }\n    }\n});","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        playway:{\n            default : null ,\n            type : cc.Node\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad :function() {},\n\n    onClick : function() {\n        if(this.playway!=null){\n            let script = this.playway.getComponent(\"RoomPlayway\") ;\n            let roomplayway = cc.instantiate(script.roomoption) ;\n            cc.beimi.openwin = roomplayway ;\n            cc.beimi.openwin.parent = this.root();\n            let roomoption = roomplayway.getComponent(\"RoomOption\") ;\n            if(roomoption!=null){\n                roomoption.init(script.data);\n            }\n        }\n    },\n\n    // update (dt) {},\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        text: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    init:function(text , time , target){\n        let self = this ;\n        this.remaining = time ;\n        this.text.string = text +\"（\"+ this.remaining +\"）\" ;\n        this.schedule(function() {\n            this.remaining = this.remaining - 1 ;\n            if(this.remaining < 0){\n                self.unschedule(this);\n            }else{\n                self.text.string = text +\"（\"+ this.remaining +\"）\" ;\n            }\n        }, 1 , time);\n    },\n    stop:function(target){\n        this.remaining = 0 ;\n        target.destroy();\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        username: {\n            default: null,\n            type: cc.Label\n        },\n        goldcoins: {\n            default: null,\n            type: cc.Label\n        },\n        cards: {\n            default: null,\n            type: cc.Label\n        }\n        ,\n        girl:{\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        if(this.ready()){\n            this.username.string = cc.beimi.user.username ;\n            this.pva_format(cc.beimi.user.goldcoins , cc.beimi.user.cards , cc.beimi.user.diamonds , self);\n            this.pvalistener(self , function (context) {\n                context.pva_format(cc.beimi.user.goldcoins , cc.beimi.user.cards , cc.beimi.user.diamonds , context) ;\n            });\n        }\n    },\n    pva_format:function(coins, cards , diamonds , object){\n        if(coins > 9999){\n            var num = coins / 10000  ;\n            object.goldcoins.string = num.toFixed(2) + '万';\n        }else{\n            object.goldcoins.string = coins;\n        }\n        object.cards.string = cards + \"张\" ;\n    },\n    playToLeft:function(){\n        this._girlAnimCtrl = this.girl.getComponent(cc.Animation);\n        this._girlAnimCtrl.play(\"girl_to_left\");\n    },\n    playToRight:function(){\n        this._girlAnimCtrl = this.girl.getComponent(cc.Animation);\n        this._girlAnimCtrl.play(\"girl_to_right\");\n    },\n    onDestroy:function(){\n        this.cleanpvalistener() ;\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        beimi0: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        cardvalue:{\n            default: null,\n            type: cc.Node\n        },\n        target:{\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    init:function(cvalue){\n        this.value = cvalue ;\n        let cardframe ;\n        let cardcolors = parseInt(this.value/4 ) ;\n        let cardtype  = parseInt(cardcolors / 9);\n        let deskcard ;\n        if(cardcolors < 0){\n            deskcard = \"wind\"+(cardcolors + 8) ; //东南西北风 ， 中发白\n        }else{\n            if(cardtype == 0){ //万\n                deskcard = \"wan\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 1){ //筒\n                deskcard = \"tong\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 2){  //条\n                deskcard = \"suo\"+ (parseInt((this.value%36)/4)+1) ;\n            }\n        }\n        cardframe = this.atlas.getSpriteFrame('牌面-'+deskcard);\n        this.cardvalue.getComponent(cc.Sprite).spriteFrame = cardframe;\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onBegin:function(){\n        /**\n         * 发射事件到 上一级 处理\n         */\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"begin\", true) );\n    },\n    opendeal:function(){\n        /**\n         * 发射事件到 上一级 处理\n         */\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"opendeal\", true) );\n    },\n    onClose:function(){\n        /**\n         * 发射事件到 上一级 处理\n         */\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"close\", true) );\n    },\n\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\n\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(event){\n        event.stopPropagation();\n    },\n    onCloseClick:function(){\n        this.closeOpenWin();\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        gamebtn: {\n            default: null,\n            type: cc.Node\n        },\n        continuegamebtn:{\n            default: null,\n            type: cc.Node\n        },\n        poker: {\n            default: null,\n            type: cc.Node\n        },\n        lastCardsPanel: {   //底牌\n            default: null,\n            type: cc.Node\n        },\n        waitting: {\n            default: null,\n            type: cc.Prefab\n        },\n        ratio:{   //底牌\n            default: null,\n            type: cc.Label\n        },\n        summary_win:{\n            default:null ,\n            type : cc.Prefab\n        },\n        summary:{\n            default:null ,\n            type : cc.Prefab\n        },\n        inviteplayer:{\n            default:null ,\n            type : cc.Prefab\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        /**\n         * 适配屏幕尺寸\n         */\n        this.resize();\n\n        this.player = new Array() ;     //存放玩家数据\n        this.pokercards = new Array();\n        this.lastcards = new Array();\n        this.lastCardsPanel.active = false ;\n        this.summarypage = null ;\n        this.inited = false ;\n        this.lasttip = null ;\n        if(cc.beimi!=null){\n            if(cc.beimi.gamestatus!=null && cc.beimi.gamestatus == \"playing\"){\n                //恢复数据\n                this.recovery() ;\n            }else if(cc.beimi.extparams!=null && cc.beimi.extparams.gamemodel == \"room\"){\n                /**\n                 * 房卡模式，开始启动游戏，当前玩家进入等待游戏的状态，显示邀请好友游戏，并分配 6位数字的房间号码\n                 */\n                /**\n                 * 处理完毕，清理掉全局变量\n                 * @type {null}\n                 */\n                this.invite = cc.instantiate(this.inviteplayer) ;\n            }\n            this.initgame();\n        }\n    },\n    begin:function(){\n        if(cc.beimi.data!=null && cc.beimi.data.enableai == true){\n            this.statictimer(\"正在匹配玩家\" , cc.beimi.data.waittime) ;\n        }else{\n            this.statictimer(\"正在匹配玩家，请稍候\" , cc.beimi.data.noaiwaitime) ;\n        }\n        this.startgame(\"false\") ;\n    },\n    opendeal:function(){\n        if(cc.beimi.data!=null && cc.beimi.data.enableai == true){\n            this.statictimer(\"正在匹配玩家\" , cc.beimi.data.waittime) ;\n        }else{\n            this.statictimer(\"正在匹配玩家，请稍候\" , cc.beimi.data.noaiwaitime) ;\n        }\n        this.startgame(\"true\") ;\n    },\n    recovery:function(){\n        this.statictimer(\"正在恢复数据，请稍候\" , cc.beimi.data.waittime) ;\n    },\n    initgame:function(){\n        let self = this ;\n        this.gamebtn.active = true ;\n        this.continuegamebtn.active = false ;\n        if(this.ready()) {\n            let socket = this.socket();\n\n\n\n            this.game = this.getCommon(\"DizhuDataBind\");\n\n            this.map(\"joinroom\" , this.joinroom_event) ;          //加入房价\n            this.map(\"players\" , this.players_event) ;            //接受玩家列表\n            this.map(\"catch\" , this.catch_event) ;                  //叫地主\n            this.map(\"catchresult\" , this.catchresult_event) ;      //最终抢到地主的玩家\n            this.map(\"lasthands\" , this.lasthands_event) ;            //翻底牌\n            this.map(\"takecards\" , this.takecards_event) ;            //出牌信息\n            this.map(\"ratio\" , this.ratio_event) ;                      //有炸\n            this.map(\"play\" , this.play_event) ;                      //接受玩家列表\n            this.map(\"allcards\" , this.allcards_event) ;              //我出的牌\n            this.map(\"cardtips\" , this.cardtips_event) ;              //提示\n            this.map(\"roomready\" , this.roomready_event) ;              //提示\n\n            this.map(\"playeready\" , this.playeready_event) ;            //玩家点击了开始游戏 ， 即准备就绪\n\n            this.map(\"cardtips\" , this.cardtips_event) ;              //提示\n\n            this.map(\"recovery\" , this.recovery_event) ;              //恢复牌局数据\n\n            socket.on(\"command\" , function(result){\n                cc.beimi.gamestatus = \"playing\" ;\n                if(self.inited == true){\n                    var data = self.parse(result) ;\n                    self.route(data.command)(data , self);\n                }\n            });\n            /**\n             * 心跳检查，服务端发起的事件，服务端可以设置 PING的时长和 PING的 TimeOut\n             */\n            socket.on(\"ping\" , function(){\n\n            });\n\n            /**\n             *   此处有个问题：游戏中，如果点击了返回，进入过其他游戏，这个 cc.beimi.extparams.playway\n             *   就发生了改变，会导致当前游戏结束后，继续游戏的时候会出现问题\n             * @type {{token: (*|null), playway, orgi, extparams: *}}\n             */\n            var param = {\n                token:cc.beimi.authorization,\n                playway:cc.beimi.extparams.playway,\n                orgi:cc.beimi.user.orgi,\n                extparams:cc.beimi.extparams\n            } ;\n            socket.exec(\"joinroom\" ,param) ;\n\n            this.inited = true ;\n        }\n\n    },\n    /**\n     * 新创建牌局，首个玩家加入，进入等待状态，等待其他玩家加入，服务端会推送 players数据\n     * @param data\n     * @param context\n     */\n    joinroom_event:function(data , context){\n\n        if(data.cardroom == true && context.inviteplayer!=null){\n            let script = context.invite.getComponent(\"BeiMiQR\")\n            script.init(data.roomid);\n            context.invite.parent = context.root() ;\n        }\n\n\n        //显示 匹配中，并计时间，超过设定的倒计时时间即AI加入，根据当前的 玩家数量 匹配机器人\n        if(data.player.id && data.player.id == cc.beimi.user.id){\n            //本人，开始计时\n            //console.log(\"本人\") ;\n            //self.player[0] = data ;\n            context.index = data.index ;   //当前玩家所在位置\n        }else{\n            //其他玩家加入，初始化\n            var inroom = false ;\n            for(var i = 0 ; i < context.player.length ; i++){\n                var player = context.player[i].getComponent(\"PlayerRender\") ;\n                if(player.userid == data.player.id){\n                    inroom = true ;\n                }\n            }\n            if(inroom == false){\n                context.newplayer(context.player.length , context , data.player , context.index + 1 == data.index) ;\n            }\n        }\n    },\n    /**\n     * 房卡模式下，邀请的好友人到齐了\n     * @param data\n     * @param context\n     */\n    roomready_event:function(data , context){\n        if(data.cardroom == true && context.invite!=null){\n            context.invite.destroy();\n        }\n    },\n    /**\n     *\n     * @param data\n     * @param context\n     */\n    playeready_event:function(data , context){\n        if(data.userid == cc.beimi.user.id){\n            context.gamebtn.active = false ;\n        }\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局 , 玩家座位排列方式 ， 和麻将统一， 都是东南西北方式 排列\n     * 0是首位玩家\n     * 1是右侧玩家\n     * 2是左侧玩家\n     * 麻将还有一个对家\n     * @param data\n     * @param context\n     */\n    players_event:function(data,context){\n        var inx = -1 ;\n        for(var i = 0 ; i<data.player.length ; i++){\n            if(data.player[i].id == cc.beimi.user.id){\n                inx = i ; break ;\n            }\n        }\n        if(data.player.length > 1 && inx >=0){\n            var pos = inx+1 ;\n            while(true){\n                if(pos == data.player.length){pos = 0 ;}\n                if(context.playerexist(data.player[pos], context) == false){\n                    context.newplayer(context.player.length , context , data.player[pos] , context.player.length == 0 && !(pos == 0 && data.player.length < data.maxplayers) ) ;\n                }\n                if(pos == inx){break ;}\n                pos = pos + 1;\n            }\n        }\n    },\n    playerexist:function(player,context){\n        var inroom = false ;\n        if(player.id == cc.beimi.user.id){\n            inroom = true ;\n        }else{\n            for(var j = 0 ; j < context.player.length ; j++){\n                if(context.player[j].id == player.id){\n                    inroom = true ; break ;\n                }\n            }\n        }\n        return inroom ;\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    catch_event:function(data,context){\n        /**\n         * 修改倍率\n         */\n        if(context.ratio){\n            context.ratio.string = data.ratio+\"倍\" ;\n        }\n        if(data.userid == cc.beimi.user.id){    //该我抢\n            context.game.catchtimer(15);\n        }else{                              //该别人抢\n            for(var inx =0 ; inx<context.player.length ; inx++){\n                var render = context.player[inx].getComponent(\"PlayerRender\") ;\n                if(render.userid && render.userid == data.userid){\n                    render.catchtimer(15);\n                    break ;\n                }\n            }\n        }\n    },\n    /**\n     * 接收到服务端的 恢复牌局的数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    recovery_event:function(data,context){\n        var mycards = context.decode(data.player.cards);\n        if(context.waittimer != null){\n            let timer = context.waittimer.getComponent(\"BeiMiTimer\");\n            if(timer){\n                timer.stop(context.waittimer) ;\n            }\n        }\n\n        /**\n         * 清理掉 extparam;\n         * @type {boolean}\n         */\n\n        context.gamebtn.active = false ;\n\n        if(context.ratio){\n            context.ratio.string = data.ratio+\"倍\" ;\n        }\n\n        context.doLastCards(context.game , context , 3 , 0);\n        for(var inx =0 ; inx  < mycards.length ; inx++){\n            let pokencard = context.playcards(context.game , context, inx * 50-300 , mycards[inx]);\n            context.registerProxy(pokencard);\n        }\n        /**\n         * 赋值，解码牌面\n         */\n        for(var i=0 ; i<context.pokercards.length ; i++){\n            var pokencard = context.pokercards[i];\n            pokencard.getComponent(\"BeiMiCard\").order();\n        }\n        context.lastCardsPanel.active = true ;\n\n        if(data.lasthands){\n            var lasthands = context.decode(data.lasthands);\n            /**\n             * 底牌 ， 顶部的 三张底牌显示区域\n             */\n            for(var i=0 ; i<context.lastcards.length ; i++){\n                var last = context.lastcards[i].getComponent(\"BeiMiCard\") ;\n                last.setCard(lasthands[i]);\n                last.order();\n            }\n            /**\n             * 设置地主标志\n             */\n            if(data.banker.userid == cc.beimi.user.id){\n                context.game.lasthands(context , context.game , data.data ) ;\n            }else{\n                context.getPlayer(data.banker.userid).setDizhuFlag(data.data);\n            }\n        }\n        /**\n         * 恢复最后出的牌\n         */\n        if(data.last != null){\n            let lastcards = context.decode(data.last.cards);        //解析牌型\n            if (data.last.userid == cc.beimi.user.id) {\n                context.game.lasttakecards(context.game, context, data.last.cardsnum, lastcards , data.last);\n            } else {\n                context.getPlayer(data.last.userid).lasttakecards(context.game, context, data.last.cardsnum, lastcards , data.last);\n            }\n\n            if (data.nextplayer  == cc.beimi.user.id) {\n                context.game.playtimer(context.game, 25 , data.automic);\n            } else {\n                context.getPlayer(data.nextplayer).playtimer(context.game, 25);\n            }\n        }\n        if(data.cardsnum!=null && data.cardsnum.length > 0){\n            for(var i =0 ; i<data.cardsnum.length ; i++){\n                context.getPlayer(data.cardsnum[i].userid).resetcards(data.cardsnum[i].cardsnum);\n            }\n        }\n    },\n    /**\n     * 有玩家出炸\n     * @param data\n     * @param context\n     */\n    ratio_event:function(data,context){\n        /**\n         * 修改倍率\n         */\n\n        if(data.king == true){\n            //王炸，播放音效\n        }else if(data.bomb == true){\n            //普通炸弹，播放音效\n        }\n        if(context.ratio){\n            context.ratio.string = data.ratio+\"倍\" ;\n        }\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    catchresult_event:function(data,context){\n        /**\n         * 修改倍率\n         */\n        if(context.ratio){\n            context.ratio.string = data.ratio+\"倍\" ;\n        }\n        if(data.userid == cc.beimi.user.id){    //该我抢\n            context.game.catchresult(data);\n        }else{                              //该别人抢\n            setTimeout(function(){\n                context.getPlayer(data.userid).catchresult(data);\n            },1500) ;\n        }\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    lasthands_event:function(data,context){\n        var lasthands = context.decode(data.lasthands);\n        /**\n         * 底牌 ， 顶部的 三张底牌显示区域\n         */\n        for(var i=0 ; i<context.lastcards.length ; i++){\n            var last = context.lastcards[i].getComponent(\"BeiMiCard\") ;\n            last.setCard(lasthands[i]);\n            last.order();\n        }\n        /**\n         * 当前玩家的 底牌处理\n         */\n        if(data.userid == cc.beimi.user.id) {\n            context.game.lasthands(context , context.game , data ) ;\n            /**\n             * 隐藏 其他玩家的 抢地主/不抢地主的 提示信息\n             */\n            for(var inx =0 ; inx<context.player.length ; inx++){\n                var render = context.player[inx].getComponent(\"PlayerRender\") ;\n                render.hideresult();\n            }\n\n            for(var i=0 ; i<lasthands.length ; i++){\n                let func = null ;\n                if(i == (lasthands.length - 1)){\n                    func = cc.callFunc(function (target , data) {\n                        if(data.tempcontext){\n                            data.tempcontext.layout(data.tempcontext.poker , function(fir , sec){\n                                return fir.zIndex - sec.zIndex ;\n                            });\n                        }\n                    }, this , {tempcontext: context});\n                }\n                let pc = context.current(context.game , context ,2 * 300 + (6 + i) * 50-300, lasthands[i] , func) ;\n                var beiMiCard = pc.getComponent(\"BeiMiCard\") ;\n                beiMiCard.order();\n                context.registerProxy(pc);\n            }\n\n            context.game.playtimer(context.game,25 , true);\n        }else{\n            context.game.hideresult();\n            for(var inx =0 ; inx<context.player.length ; inx++){\n                var render = context.player[inx].getComponent(\"PlayerRender\") ;\n                render.hideresult();\n            }\n            context.getPlayer(data.userid).lasthands(context,context.game,data);\n            context.getPlayer(data.userid).playtimer(context.game , 25);\n        }\n        for(var inx =0 ; inx<context.pokercards.length ; inx++){\n            var pc = context.pokercards[inx] ;\n            pc.zIndex = 54 - pc.card ;\n        }\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    takecards_event:function(data,context){\n        context.lasttip = null ;\n        if(data.allow == true) {\n            var lastcards ;\n            if(data.donot == false){\n                lastcards = context.decode(data.cards);        //解析牌型\n            }\n            if (data.userid == cc.beimi.user.id) {\n                context.game.unselected(context , context.game) ;\n                context.game.lasttakecards(context.game, context, data.cardsnum, lastcards , data);\n            } else {\n                context.getPlayer(data.userid).lasttakecards(context.game, context, data.cardsnum, lastcards , data);\n            }\n\n            context.game.selectedcards.splice(0 ,context.game.selectedcards.length );//清空\n            if(data.over == false){\n                if (data.nextplayer == cc.beimi.user.id) {\n                    context.game.playtimer(context.game, 25 , data.automic);\n                } else {\n                    context.getPlayer(data.nextplayer).playtimer(context.game, 25);\n                }\n            }\n        }else{//出牌不符合规则，需要进行提示\n            context.game.notallow.active = true ;\n            setTimeout(function(){\n                context.game.notallow.active = false ;\n            } , 2000);\n            context.game.unselected(context , context.game);\n        }\n    },\n    /**\n     * 接收到服务端的 出牌提示信息\n     * @param data\n     * @param context\n     */\n    cardtips_event:function(data,context){\n        context.game.unselected(context , context.game) ;\n        if(data.allow == true) {\n            var tipcards = context.decode(data.cards);        //解析牌型\n            context.lasttip = tipcards.join(\",\") ;\n            for(var inx = 0 ; inx < tipcards.length ; inx++){\n                context.game.cardtips(context , tipcards[inx] , tipcards) ;\n            }\n        }else{//出牌不符合规则，需要进行提示\n            context.game.cardtipsfornot(context , context.game);\n        }\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    play_event:function(data,context){\n        /**\n         * 增加了全局变量，gamestatus , 用于控制当前玩家退出后恢复数据\n         * @type {string}\n         */\n        cc.beimi.gamestatus = \"playing\" ;\n        var mycards = context.decode(data.player.cards);\n        if(context.waittimer){\n            let timer = context.waittimer.getComponent(\"BeiMiTimer\");\n            if(timer){\n                timer.stop(context.waittimer) ;\n            }\n        }\n\n        let center = context.game.pokerpool.get();\n        let left = context.game.pokerpool.get(),right = context.game.pokerpool.get();\n        center.parent = context.root() ;\n        left.parent = context.root() ;\n        right.parent = context.root() ;\n        center.setPosition(0,200);\n        left.setPosition(0,200);\n        right.setPosition(0,200);\n\n        let finished = cc.callFunc(function (target , data) {\n            if(data.game){\n                data.game.pokerpool.put(data.current) ;\n                data.game.pokerpool.put(data.left);\n                data.game.pokerpool.put(data.right);\n\n                /**\n                 * 赋值，解码牌面\n                 */\n                for(var i=0 ; i<data.self.pokercards.length ; i++){\n                    var pokencard = data.self.pokercards[i];\n                    pokencard.getComponent(\"BeiMiCard\").order();\n                }\n\n                data.self.lastCardsPanel.active = true ;\n            }\n        }, this , {game : context.game  , self: context, left :left , right : right , current : center});\n\n        context.doLastCards(context.game , context , 3 , 0);\n\n        /**\n         *  发牌动作，每次6张，本人保留总计17张，其他人发完即回收\n         */\n        setTimeout(function() {\n            context.dealing(context.game , 6 , context , 0 , left , right , mycards) ;\n            setTimeout(function(){\n                context.dealing(context.game , 6 , context , 1, left , right , mycards) ;\n                setTimeout(function(){\n                    context.dealing(context.game , 5 , context , 2, left , right , mycards , finished) ;\n                    context.reordering(context);\n                },500) ;\n            },500) ;\n        }, 0);\n    },\n    /**\n     * 打完牌，进入结算界面，结算界面流程：\n     * 1、提示你赢/输了\n     * 2、1秒后所有玩家的牌翻出来，显示剩余的牌\n     * 3、2秒后显示结算界面\n     * 4、玩家点选明牌开始还是继续游戏\n     * @param data\n     * @param context\n     */\n    allcards_event:function(data , context){\n        /**\n         * 全局变量控制，用于恢复数据\n         * @type {string}\n         */\n        cc.beimi.gamestatus = \"notready\" ;\n        //结算界面，\n        let player ;\n        for(var i=0 ; i<data.players.length ; i++){\n            var temp = data.players[i] ;\n            if(temp.userid != cc.beimi.user.id){\n                var cards = context.decode(temp.cards);        //解析牌型\n                var tempscript = context.getPlayer(temp.userid) ;\n                for(var inx = 0 ; inx < cards.length ; inx++) {\n                    //tempscript.lasttakecards(context.game, context, cards.length, cards, data);\n                    /**\n                     * 最后牌局结束以后，显示所有玩家的手牌\n                     */\n                }\n            }else{\n                player = temp  ;\n            }\n        }\n        if(player!=null) {\n            /**\n             * 更新个人账号资产信息\n             */\n            context.pva(\"gold\" , player.balance);\n            /**\n             * 刷新个人资产显示 , 可以增加相关动画显示，duang的一声，显示的金币变成金光闪闪的，然后再变回去\n             */\n            context.updatepva() ;\n        }\n        setTimeout(function(){\n            if(player!=null){\n                if(player.win == true){\n                    context.summarypage = cc.instantiate(context.summary_win) ;\n                }else{\n                    context.summarypage = cc.instantiate(context.summary) ;\n                }\n                context.summarypage.parent = context.root() ;\n                let temp = context.summarypage.getComponent(\"SummaryDetail\") ;\n                temp.create(context , data);\n            }\n            /**\n             * 隐藏顶部的 底牌 显示区域\n             * @type {boolean}\n             */\n            context.lastCardsPanel.active = false ;\n\n            if(data.gameRoomOver == true){//房间解散\n                for(var inx = 0 ; inx<context.player.length ; inx++){\n                    context.player[inx].destroy();\n                }\n                context.player.splice(0 , context.player.length) ;//房间解散，释放资源\n                context.player = new Array();\n                context.clean();\n            }\n        } , 2000);\n\n    },\n    getPlayer:function(userid){\n        var tempRender;\n        for(var inx =0 ; inx<this.player.length ; inx++){\n            var render = this.player[inx].getComponent(\"PlayerRender\") ;\n            if(render.userid && render.userid == userid){\n                tempRender = render ; break ;\n            }\n        }\n        return tempRender ;\n    },\n    dealing:function(game , num , self , times , left , right , cards , finished){\n        /**\n         * 处理当前玩家的 牌， 发牌 ，  17张牌， 分三次动作处理完成\n         */\n        for(var i=0 ; i<num ; i++){\n            var myCards = self.current(game , self ,times * 300 + i * 50-300, cards[times * 6 + i] , finished) ;\n            this.registerProxy(myCards);\n        }\n        self.otherplayer(left  , 0 , num ,game , self) ;\n        self.otherplayer(right , 1 , num ,game , self) ;\n\n    },\n    otherplayer:function(currpoker , inx, num ,game , self){\n        if(inx == 0){\n            let seq = cc.sequence(\n                cc.spawn(cc.moveTo(0.2, -350, 50) , cc.scaleTo(0.2, 0.3, 0.3)) , cc.moveTo(0 , 0 , 200) , cc.scaleTo(0, 1, 1)\n            );\n            currpoker.runAction(seq);\n        }else{\n            let seq = cc.sequence(\n                cc.spawn(cc.moveTo(0.2, 350, 50) , cc.scaleTo(0.2, 0.3, 0.3)) , cc.moveTo(0 , 0 , 200) , cc.scaleTo(0, 1, 1)\n            );\n            currpoker.runAction(seq);\n        }\n        //currpoker.setScale(1);\n        var render = self.player[inx].getComponent(\"PlayerRender\") ;\n        for(var i=0 ; i<num ; i++){\n            render.countcards(1);\n        }\n    },\n    doLastCards:function(game , self , num , card){//发三张底牌\n        for(var i=0 ; i<num ; i++){\n            var width = i * 80 - 80;\n            let currpoker = game.minpokerpool.get() ;\n            currpoker.getComponent(\"BeiMiCard\").setCard(card) ;\n            currpoker.card = card ;\n            currpoker.parent = this.lastCardsPanel;\n            currpoker.setPosition(width , 0);\n\n            self.lastcards[self.lastcards.length] = currpoker ;\n        }\n    },\n    registerProxy:function(myCard){\n        if(myCard){\n            var beiMiCard = myCard.getComponent(\"BeiMiCard\") ;\n            beiMiCard.proxy(this.game);\n        }\n    },\n    playcards:function(game , self , posx , card){\n        return self.current(game ,self , posx , card , null);\n    },\n    current:function(game , self , posx , card , func){\n        let currpoker = game.pokerpool.get() ;\n        var beiMiCard = currpoker.getComponent(\"BeiMiCard\") ;\n        beiMiCard.setCard(card) ;\n        currpoker.card = card ;\n        currpoker.parent = self.poker ;\n        currpoker.setPosition(0,200);\n\n        currpoker.setScale(1,1);\n        currpoker.zIndex = 100 - card ;\n\n        self.pokercards.push(currpoker);\n\n        if(func!=null){\n            let seq = cc.sequence(cc.moveTo(0.2, posx, -180) , func);\n            currpoker.runAction(seq);\n        }else{\n            let action = cc.moveTo(0.2, posx, -180) ;\n            currpoker.runAction(action);\n        }\n        return currpoker;\n    },\n    reordering:function(self){\n        for(var i=0 ; i<self.pokercards.length ; i++){\n            self.pokercards[i].parent = self.poker ;\n        }\n    },\n    newplayer:function(inx , self , data , isRight){\n        var pos = cc.v2(520, 100) ;\n        if(isRight == false){\n            pos = cc.v2(-520,100) ;\n        }\n        let game = self.getCommon(\"DizhuDataBind\");\n        if(game && game.playerspool.size() > 0){\n            self.player[inx] = game.playerspool.get() ;\n            self.player[inx].parent = self.root() ;\n            self.player[inx].setPosition(pos);\n            var render = self.player[inx].getComponent(\"PlayerRender\") ;\n            render.initplayer(data , isRight);\n        }\n    },\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n    /**\n     * 不抢/叫地主\n     */\n    givup:function(){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"giveup\",\"giveup\");\n        }\n    },\n    /**\n     * 开始游戏\n     */\n    startgame:function(opendeal){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"start\",opendeal);\n        }\n    },\n    /**\n     * 不抢/叫地主\n     */\n    cardtips:function(){\n        if(this.ready()){\n            let socket = this.socket();\n\n            if(this.lasttip!=null){\n                socket.emit(\"cardtips\",this.lasttip);\n            }else{\n                socket.emit(\"cardtips\",\"\");\n            }\n            this.lasttip = null ;\n        }\n    },\n    /**\n     * 抢/叫地主触发事件\n     */\n    docatch:function(){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"docatch\",\"docatch\");\n        }\n    },\n    /**\n     * 出牌\n     */\n    doPlayCards:function(){\n        if(this.ready()){\n            let socket = this.socket();\n            this.game.selectedcards.splice(0 , this.game.selectedcards.length) ;\n            for(var i=0 ; i<this.pokercards.length ; i++){\n                var card = this.pokercards[i] ;\n                var temp = card.getComponent(\"BeiMiCard\");\n                if(temp.selected == true){\n                    this.game.selectedcards.push(temp.card) ;\n                }\n            }\n            socket.emit(\"doplaycards\" , this.game.selectedcards.join());\n        }\n        this.lasttip = null ;\n    },\n    /**\n     * 不出牌\n     */\n    noCards:function(){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"nocards\",\"nocards\");\n        }\n        this.lasttip = null ;\n    },\n    clean:function(){\n        for(var inx = 0 ; inx<this.pokercards.length ; inx++){\n            let pc = this.pokercards[inx] ;\n            this.game.pokerpool.put(pc) ;//回收回去\n        }\n        this.pokercards.splice(0 , this.pokercards.length ) ;\n        for(var i=0 ; i<this.lastcards.length ; i++){\n            this.game.minpokerpool.put(this.lastcards[i]);\n        }\n\n        this.lastcards.splice( 0 , this.lastcards.length) ;\n\n        for(var i = 0 ; i < this.player.length ; i++){\n            var player = this.player[i].getComponent(\"PlayerRender\") ;\n            player.clean(this.game);\n        }\n        this.player.splice(0 , this.player.length) ;\n\n        this.game.clean(this);\n        this.ratio.string = \"15倍\" ;\n    },\n    onCloseClick:function(){\n        this.continuegamebtn.active = true ;\n    },\n    restart:function(command){\n        this.game.restart();\n        this.statictimer(\"正在匹配玩家\" , 5) ;\n        /**\n         * 系统资源回收完毕，发送一个 重新开启游戏的 通知\n         */\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"restart\" , command);\n        }\n    },\n    continuegame:function(){\n        this.continuegamebtn.active = false ;\n        this.restart(\"begin\");\n    },\n    statictimer:function(message , time){\n        this.waittimer = cc.instantiate(this.waitting);\n        this.waittimer.parent = this.root();\n\n        let timer = this.waittimer.getComponent(\"BeiMiTimer\");\n        if(timer){\n            timer.init(message , time , this.waittimer);\n        }\n    },\n    onDestroy:function(){\n        this.inited = false ;\n        this.cleanmap();\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"leave\",\"leave\");\n        }\n    }\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    back:function(){\n        this.loadding();\n        let self = this ;\n        setTimeout(function(){\n            self.scene(cc.beimi.gametype , self);\n        } , 500)\n\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        goldcoins: {\n            default: null,\n            type: cc.Label\n        },\n        cards: {\n            default: null,\n            type: cc.Label\n        },\n        player: {\n            default: null,\n            type: cc.Prefab\n        },\n        poker: {\n            default: null,\n            type: cc.Prefab\n        },\n        poker_min: {\n            default: null,\n            type: cc.Prefab\n        },\n        myself: {\n            default: null,\n            type: cc.Prefab\n        },\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        catchbtn: {\n            default: null,\n            type: cc.Node\n        },\n        timer: {\n            default: null,\n            type: cc.Node\n        },\n        timer_num:{\n            default: null,\n            type: cc.Label\n        },\n        lastcards:{\n            default: null,\n            type: cc.Node\n        },\n        playbtn:{\n            default: null,\n            type: cc.Node\n        },\n        notallow:{\n            default: null,\n            type: cc.Node\n        },\n        operesult:{\n            default: null,\n            type: cc.Node\n        },\n        donottake:{\n            default: null,\n            type: cc.Node\n        },\n        cardtipmsg:{\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        if(this.timer){\n            this.timer.active = false ;\n        }\n        if(this.catchbtn){\n            this.catchbtn.active = false ;\n        }\n        if(this.playbtn){\n            this.playbtn.active = false ;\n        }\n        if(this.notallow){\n            this.notallow.active = false ;\n        }\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n        if(this.cardtipmsg){\n            this.cardtipmsg.active = false ;\n        }\n\n\n        this.playerspool = new cc.NodePool();\n        this.myselfpool = new cc.NodePool();\n        this.pokerpool = new cc.NodePool();     //背面\n        this.minpokerpool = new cc.NodePool();     //背面\n\n\n        this.selectedcards = new Array();   //存放当前玩家 选中 的牌\n\n        this.cardslist = new Array();\n\n        for(i=0 ; i<2 ; i++){\n            this.playerspool.put(cc.instantiate(this.player)); // 创建节点\n        }\n        for(i =0 ; i<25 ; i++){\n            this.pokerpool.put(cc.instantiate(this.poker));     //牌-背面\n        }\n        for(i =0 ; i<60 ; i++){\n            this.minpokerpool.put(cc.instantiate(this.poker_min));     //牌-背面\n        }\n        this.myselfpool.put(cc.instantiate(this.myself));\n\n        if(this.ready()){\n            this.pva_format(cc.beimi.user.goldcoins , cc.beimi.user.cards , cc.beimi.user.diamonds , self);\n            this.pvalistener(self , function (context) {\n                context.pva_format(cc.beimi.user.goldcoins , cc.beimi.user.cards , cc.beimi.user.diamonds , context) ;\n            });\n        }\n        if(this.myselfpool.size() > 0 && cc.beimi != null){\n            this.playermysql = this.myselfpool.get();\n            this.playermysql.parent = this.root() ;\n            this.playermysql.setPosition(-520,-180);\n            var render = this.playermysql.getComponent(\"PlayerRender\") ;\n            render.initplayer(cc.beimi.user);\n        }\n    },\n    pva_format:function(coins, cards , diamonds , object){\n        if(coins > 9999){\n            var num = coins / 10000  ;\n            object.goldcoins.string = num.toFixed(2) + '万';\n        }else{\n            object.goldcoins.string = coins;\n        }\n        object.cards.string = cards + \"张\" ;\n    },\n    catchtimer:function(times){\n\n        if(this.playbtn){\n            this.playbtn.active = false ;\n        }\n        if(this.timer){\n            this.timer.active = true ;\n        }\n        if(this.catchbtn){\n            this.catchbtn.active = true ;\n        }\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n\n        let self = this ;\n        var gameTimer = require(\"GameTimer\");\n        this.beimitimer = new gameTimer();\n        this.timesrc = this.beimitimer.runtimer(this , this.timer , this.atlas , this.timer_num , this.timer_num , times);\n    },\n    catchresult:function(data){\n        if(this.timer){\n            this.timer.active = false ;\n        }\n        if(this.catchbtn){\n            this.catchbtn.active = false ;\n        }\n        if(this.playbtn){\n            this.playbtn.active = false ;\n        }\n        if(this.timesrc){\n            this.beimitimer.stoptimer(this , this.timer , this.timesrc);\n        }\n        this.doOperatorResult(\"catch\" , data.docatch , false) ;\n    },\n    hideresult:function(){\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n    },\n    lasthands:function(self, game,data){   //设置地主\n        this.setDizhuFlag(data) ;\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n    },\n    setDizhuFlag:function(data){\n        var render = this.playermysql.getComponent(\"PlayerRender\") ;\n        render.setDizhuFlag(data);\n    },\n    lasttakecards:function(game , self , cardsnum ,lastcards , data){\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.playbtn){\n            this.playbtn.active = false ;\n        }\n        if(this.catchbtn){\n            this.catchbtn.active = false;\n        }\n        if(this.jsq){\n            this.jsq.active = false ;\n        }\n        if(this.lastcards){\n            this.lastcards.active = true ;\n        }\n        if(this.timesrc){\n            this.beimitimer.stoptimer(this , this.timer , this.timesrc);\n        }\n        for(var i=0 ; i<this.cardslist.length ; i++){\n            this.pokerpool.put(this.cardslist[i]) ;//回收回去\n        }\n        this.cardslist.splice(0,this.cardslist.length) ;//删除数组里的所有内容\n        if (data.donot == false) {    //选择出牌或默认出牌\n            for(var i=0 ; i<lastcards.length ; i++){\n                this.playcards(self , i , lastcards[i] , lastcards) ;\n            }\n            this.layout(this.lastcards , function(fir , sec){\n                return fir.zIndex - sec.zIndex ;\n            });\n        }else{\n            this.doOperatorResult(\"lasttakecards\" , true , data.sameside) ;\n        }\n    },\n    cardtips:function(self , card , tipcards){\n        var cacheCard ;\n        for(var inx = 0 ; inx<self.pokercards.length ; inx++){\n            let pc = self.pokercards[inx] ;\n            if(pc.getComponent(\"BeiMiCard\").card == card){\n                cacheCard = pc ; break ;\n            }\n        }\n        if(cacheCard != null){\n            cacheCard.getComponent(\"BeiMiCard\").doselect();\n        }\n    },\n    cardtipsfornot:function(self , game){\n        game.cardtipmsg.active = true ;\n        setTimeout(function(){\n            game.cardtipmsg.active = false ;\n        } , 1000);\n        game.unselected(self , game) ;\n    },\n    unselected:function( self , game){\n        for(var inx = 0 ; inx<self.pokercards.length ; inx++){\n            let pc = self.pokercards[inx] ;\n            pc.getComponent(\"BeiMiCard\").unselected();\n        }\n    },\n    playcards:function(self , index , card , lastcards){\n        var cacheCard ;\n        for(var inx = 0 ; inx<self.pokercards.length ; inx++){\n            let pc = self.pokercards[inx] ;\n            if(pc.card == card){\n                cacheCard = pc ; break ;\n            }\n        }\n        if(cacheCard != null){\n            cacheCard.getComponent(\"BeiMiCard\").unselected();\n            cacheCard.x = index * 30 - 30 ;\n            cacheCard.y = 0;\n\n            var zIndex = this.countcard(card , lastcards) ;\n\n            cacheCard.zIndex = 4 - zIndex ;\n            // cacheCard.zIndex =  zIndex;\n\n            cacheCard.setScale(0.5,0.5);\n\n            cacheCard.parent = this.lastcards ;\n\n\n            this.cardslist.push(cacheCard) ;\n        }\n    },\n    /**\n     * 按照张数最大的牌排序\n     * @param card\n     * @param lastcards\n     * @returns {number}\n     */\n    countcard:function(card , lastcards){\n        let value = parseInt(card / 4);\n        let count = 0 ;\n        for(var i = 0 ;i<lastcards.length ; i++){\n            let temp = parseInt(lastcards[i] / 4) ;\n            if(value == temp){\n                count = count + 1 ;\n            }\n        }\n        return count ;\n    },\n    /**\n     *\n     * @param game\n     * @param times\n     * @param automic 不允许 不出\n     */\n    playtimer:function(game , times , automic){\n        if(this.timer){\n            this.timer.active = true ;\n        }\n        if(this.playbtn){\n            this.playbtn.active = true ;\n        }\n        if(this.catchbtn){\n            this.catchbtn.active = false;\n        }\n        if(this.lastcards){\n            this.lastcards.active = false ;\n        }\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n\n        if(automic == true){\n            this.donottake.active = false ;\n        }else{\n            this.donottake.active = true ;\n        }\n\n        for(var i=0 ; i<this.cardslist.length ; i++){\n            game.pokerpool.put(this.cardslist[i]) ;//回收回去\n        }\n        let self = this ;\n        var gameTimer = require(\"GameTimer\");\n        this.beimitimer = new gameTimer();\n        this.timesrc = this.beimitimer.runtimer(this , this.timer , this.atlas , this.timer_num , this.timer_num , times);\n    },\n    doOperatorResult:function(oper , resvalue , sameside){\n        this.operesult.active = true ;\n        if(oper == \"catch\"){\n            if(resvalue == true){\n                for(var i=0 ; i<this.operesult.children.length ; i++){\n                    this.operesult.children[i].active = false ;\n                    if(this.operesult.children[i].name == \"提示_抢地主\"){\n                        this.operesult.children[i].active = true ;\n                    }\n                }\n            }else {\n                for (var i = 0; i < this.operesult.children.length; i++) {\n                    this.operesult.children[i].active = false;\n                    if (this.operesult.children[i].name == \"提示_不抢\") {\n                        this.operesult.children[i].active = true;\n                    }\n\n                }\n            }\n        }else if(oper == \"lasttakecards\"){\n            if(sameside == true){\n                for (var i = 0; i < this.operesult.children.length; i++) {\n                    this.operesult.children[i].active = false;\n                    if (this.operesult.children[i].name == \"不要\") {\n                        this.operesult.children[i].active = true;\n                    }\n                }\n            }else{\n                for (var i = 0; i < this.operesult.children.length; i++) {\n                    this.operesult.children[i].active = false;\n                    if (this.operesult.children[i].name == \"要不起\") {\n                        this.operesult.children[i].active = true;\n                    }\n                }\n            }\n        }\n    },\n    doSelectCard:function(card){\n        var existcard = this.selectedcards.find(function(pokercard){\n            pokercard.card == card\n        });\n        if(existcard == undefined){\n            this.selectedcards.push(card) ;\n        }\n    },\n    doUnSelectCard:function(card){\n        var inx = this.selectedcards.indexOf(card);\n        if(inx >= 0){\n            this.selectedcards.splice(inx , inx+1) ;\n        }\n    },\n    clean:function(context){\n        if(this.catchbtn){\n            this.catchbtn.active = false;\n        }\n        if(this.lastcards){\n            this.lastcards.active = false ;\n        }\n        if(this.operesult){\n            this.operesult.active = false ;\n        }\n        var render = this.playermysql.getComponent(\"PlayerRender\") ;\n        render.clean(context) ;\n    },\n    restart:function(){\n        for(var i=0 ; i<2 ; i++){\n            this.playerspool.put(cc.instantiate(this.player)); // 创建节点\n        }\n\n        /**\n         * 费劲巴拉的收集起来，然后又给销毁了，浪费资源！！！\n         */\n        this.pokerpool.clear();\n        this.minpokerpool.clear();\n\n        for(var inx =0 ; inx<25 ; inx++){\n            this.pokerpool.put(cc.instantiate(this.poker));     //牌-背面\n        }\n        for(var inx=0 ; inx<60 ; inx++){\n            this.minpokerpool.put(cc.instantiate(this.poker_min));     //牌-背面\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.node.on(cc.Node.EventType.TOUCH_START, function(e){\n            e.stopPropagation();\n        });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        title_feedback: {\n            default: null,\n            type: cc.Node\n        },\n        title_reply: {\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad : function() {\n        this.title_feedback.active = true ;\n\n        this.title_reply.active = false ;\n        /**\n         * 从远程加载数据，如果加载数据失败，则显示提示消息，并注册拖动刷新事件\n         */\n    },\n    onFeedBack:function(){\n        this.title_feedback.active = true ;\n\n        this.title_reply.active = false ;\n    },\n    onReply:function(){\n        this.title_feedback.active = false ;\n\n        this.title_reply.active = true ;\n    }\n\n\n    // update (dt) {},\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    back:function(){\n\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        roomidDialog: {\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(event, data){\n        this.loadding();\n        let object = this ;\n        setTimeout(function(){\n            object.scene(data , object) ;\n        } , 200);\n    },\n    onClickJoinRoom:function(){\n        if(this.roomidDialog){\n            cc.beimi.openwin = cc.instantiate(this.roomidDialog) ;\n            cc.beimi.openwin.parent = this.root();\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n    },\n    /**\n     * @param self              调用的源\n     * @param timernode         计时器所在的节点\n     * @param atlas             计时器图集\n     * @param timer_first       计时器首个计时字母\n     * @param timer_sec         计时器第二个数字\n     * @param times             计时器执行次数\n     */\n    runtimer:function(source , timernode  , atlas, timer_first , timer_sec , times){\n\n        let self = this ;\n        this.remaining = times ;\n        timer_first.string = times ;\n        if(timernode){\n            timernode.active = true ;\n        }\n\n        this.timersrc = function() {\n            self.remaining = self.remaining - 1 ;\n            if(self.remaining < 0){\n                source.unschedule(this);\n                timernode.active = false ;\n            }else{\n                timer_first.string = self.remaining  ;\n            }\n        } ;\n        source.schedule(this.timersrc, 1 , times , 0);\n\n        return this.timersrc ;\n    },\n    stoptimer:function(source , timernode , timer){\n        if(timernode){\n            timernode.active = false ;\n        }\n        let self = this ;\n        this.remaining = 0;\n        if(timer){\n            source.unscheduleAllCallbacks();\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        beimi0: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        card_one:{\n            default: null,\n            type: cc.Node\n        },\n        card_two:{\n            default: null,\n            type: cc.Node\n        },\n        card_three:{\n            default: null,\n            type: cc.Node\n        },\n        card_four:{\n            default: null,\n            type: cc.Node\n        },\n        card_last:{\n            default: null,\n            type: cc.Node\n        },\n        target:{\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    init:function(cvalue , gang){\n        this.value = cvalue ;\n\n        let cardcolors = parseInt(this.value/4 ) ;\n        let cardtype  = parseInt(cardcolors / 9);\n\n        this.mjtype = cardtype ;\n        this.mjvalue = parseInt((this.value%36)/4 ) ;\n\n        let deskcard , cardframe ;\n        if(cardcolors < 0){\n            deskcard = \"wind\"+(cardcolors + 8) ; //东南西北风 ， 中发白\n        }else{\n            if(cardtype == 0){ //万\n                deskcard = \"wan\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 1){ //筒\n                deskcard = \"tong\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 2){  //条\n                deskcard = \"suo\"+ (parseInt((this.value%36)/4)+1) ;\n            }\n        }\n        if(deskcard == \"suo2\"){\n            cardframe = this.beimi0.getSpriteFrame('牌面-'+deskcard);\n        }else{\n            cardframe = this.atlas.getSpriteFrame('牌面-'+deskcard);\n        }\n\n        this.card_one.getComponent(cc.Sprite).spriteFrame = cardframe;\n        if(this.card_two){\n            this.card_two.getComponent(cc.Sprite).spriteFrame = cardframe;\n        }\n        if(this.card_three){\n            this.card_three.getComponent(cc.Sprite).spriteFrame = cardframe;\n        }\n        if(this.card_four){\n            this.card_four.getComponent(cc.Sprite).spriteFrame = cardframe;\n        }\n        if(this.card_last){\n            if(gang == false){\n                this.card_last.active = false ;\n            }else{\n                this.card_last.active = true ;\n            }\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.VERSION = 2017061001;\nvar HTTP = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n    statics: {\n        baseURL:\"http://129.28.151.103:8080\",\n        wsURL : \"ws://129.28.151.103:9081\",\n       // baseURL:\"http://127.0.0.1:8080\",\n       // wsURL : \"ws://127.0.0.1:9081\",\n        authorization: null,\n        httpGet: function (url , success , error , object) {\n            var xhr = cc.loader.getXMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if(xhr.status >= 200 && xhr.status < 300){\n                        var respone = xhr.responseText;\n                        if(success){\n                            success(respone , object);\n                        }\n                    }else{\n                        if(error){\n                            error(object);\n                        }\n                    }\n                }\n            };\n            let token = \"\" ;\n            if(cc.beimi!=null && cc.beimi.authorization != null){\n                token = cc.beimi.authorization ;\n            }\n            if(url.indexOf(\"?\") >0){\n                xhr.open(\"GET\", HTTP.baseURL+url+\"&authorization=\"+token , true);\n            }else{\n                xhr.open(\"GET\", HTTP.baseURL+url+\"?authorization=\"+token, true);\n            }\n\n            if (cc.sys.isNative) {\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            //超时回调\n            xhr.ontimeout = function(event){\n                error(object);\n            };\n            xhr.onerror = function(event){\n                error(object);\n            };\n\n            // note: In Internet Explorer, the timeout property may be set only after calling the open()\n            // method and before calling the send() method.\n            xhr.timeout = 3000;// 5 seconds for timeout\n\n            xhr.send();\n        },\n        encodeFormData : function(data)  \n        {  \n            var pairs = [];  \n            var regexp = /%20/g;  \n          \n            for (var name in data){  \n                var value = data[name].toString();  \n                var pair = encodeURIComponent(name).replace(regexp, \"+\") + \"=\" +  \n                    encodeURIComponent(value).replace(regexp, \"+\");  \n                pairs.push(pair);  \n            }  \n            return pairs.join(\"&\");  \n        },\n        httpPost: function (url, params, success , error , object) {\n            var xhr = cc.loader.getXMLHttpRequest();\n\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if(xhr.status >= 200 && xhr.status < 300){\n                        var respone = xhr.responseText;\n                        if(success){\n                            success(respone , object);\n                        }\n                    }else{\n                        if(error){\n                            error(object);\n                        }\n                    }\n                }\n            };\n            xhr.open(\"POST\", HTTP.baseURL+url, true);\n            if(cc.beimi!=null && cc.beimi.authorization != null){\n                xhr.setRequestHeader(\"authorization\", cc.beimi.authorization) ;\n            }\n            if (cc.sys.isNative) {\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            xhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n    \n            // note: In Internet Explorer, the timeout property may be set only after calling the open()\n            // method and before calling the send() method.\n            xhr.timeout = 5000;// 5 seconds for timeout\n            \n            xhr.send( HTTP.encodeFormData(params));\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n    },\n\n    \n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        beimi0: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        cardvalue:{\n            default: null,\n            type: cc.Node\n        },\n        target:{\n            default: null,\n            type: cc.Node\n        },\n\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.lastonecard = false ;\n        this.take = false ;\n        this.node.on('mousedown', function ( event ) {\n            console.log('Hello!');\n        });\n        this.node.on('mousemove', function ( event ) {\n            console.log('Hello Mover!');\n        });\n    },\n    init:function(cvalue){\n        this.value = cvalue ;\n        let cardframe ;\n        let cardcolors = parseInt(this.value/4 ) ;\n        let cardtype  = parseInt(cardcolors / 9);\n\n        this.mjtype = cardtype ;\n        this.mjvalue = parseInt((this.value%36)/4 ) ;\n\n        let deskcard ;\n        this.lastonecard = false;\n        if(cardcolors < 0){\n            deskcard = \"wind\"+(cardcolors + 8) ; //东南西北风 ， 中发白\n        }else{\n            if(cardtype == 0){ //万\n                deskcard = \"wan\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 1){ //筒\n                deskcard = \"tong\"+ (parseInt((this.value%36)/4)+1) ;\n            }else if(cardtype == 2){  //条\n                deskcard = \"suo\"+ (parseInt((this.value%36)/4)+1) ;\n            }\n        }\n        if(deskcard == \"suo2\"){\n            cardframe = this.beimi0.getSpriteFrame('牌面-'+deskcard);\n        }else{\n            cardframe = this.atlas.getSpriteFrame('牌面-'+deskcard);\n        }\n        this.cardvalue.getComponent(cc.Sprite).spriteFrame = cardframe;\n\n        var anim = this.getComponent(cc.Animation);\n        anim.play(\"majiang_current\");\n    },\n    lastone:function(){\n        if(this.lastonecard == false){\n            this.lastonecard = true;\n            this.target.width = this.target.width + 30 ;\n        }\n    },\n    selected:function(){\n        this.target.opacity = 168 ;\n        this.selectcolor = true ;\n    },\n    relastone:function(){\n        if(this.lastonecard == true){\n            this.lastonecard = false;\n            this.target.width = this.target.width - 30 ;\n        }\n    },\n    reinit:function(){\n        this.relastone();\n\n        this.lastonecard = false;\n\n        this.selectcolor = false ;\n        this.target.opacity = 255 ;\n\n        if(this.take){\n            this.target.y = this.target.y - 30 ;\n            this.take = false ;\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    statics:{\n        get:function(key){\n            return cc.sys.localStorage.getItem(key) ;\n        },\n        put:function(key , value){\n            cc.sys.localStorage.setItem(key, value) ;\n        },\n        remove:function(key){\n            cc.sys.localStorage.removeItem(key) ;\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\n\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        numdata: {\n            default:null,\n            type:cc.Node\n\n\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad : function () {\n        this.roomid = new Array() ;\n    },\n    onClick:function(event,data){\n        if(this.roomid.length < 6){\n            this.roomid.push(data);\n            this.disRoomId();\n        }\n        if(this.roomid.length == 6){\n            this.closeOpenWin();\n            /**\n             * 查询服务端的房间号码 ， 然后通过房间号码找到对应的房间游戏类型，玩法等信息\n             */\n            if(this.ready()){\n                let socket = this.socket();\n                /**\n                 * 发送 room请求\n                 */\n                var param = {\n                    token:cc.beimi.authorization,\n                    roomid:this.roomid.join(\"\"),\n                    orgi:cc.beimi.user.orgi,\n                    userid:cc.beimi.user.id\n                } ;\n                socket.exec(\"searchroom\" , param);\n                this.registercallback(this.roomCallBack);\n            }\n            this.loadding();\n        }\n    },\n    roomCallBack:function(result , self){\n        var data = self.parse(result) ;\n        if(data.result == \"ok\"){\n            var extparams = {\n                gametype : data.code ,\n                playway :  data.id ,\n                gamemodel : \"room\"\n            } ;\n            /**\n             * 发送创建房间开始游戏的请求\n             */\n            self.preload(extparams , self) ;\n        }else if(data.result == \"notexist\"){\n            self.alert(\"房间号不存在。\");\n        }else if(data.result == \"full\"){\n            self.alert(\"房间已满员。\");\n        }\n    },\n    onDeleteClick:function(){\n        this.roomid.splice(this.roomid.length-1 , this.roomid.length) ;\n        this.disRoomId();\n    },\n    onCleanClick:function(){\n        this.roomid.splice(0 , this.roomid.length) ;\n        this.disRoomId();\n    },\n    disRoomId:function(){\n        let children = this.numdata.children ;\n        for(var inx = 0 ; inx < 6 ; inx ++){\n            if(inx < this.roomid.length){\n                children[inx].children[0].getComponent(cc.Label).string = this.roomid[inx] ;\n            }else{\n                children[inx].children[0].getComponent(cc.Label).string = \"\" ;\n            }\n        }\n    }\n    // update (dt) {},\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(){\n        this.logout();\n        this.scene(\"login\", this) ;\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onBackClick:function(){\n        this.scene(cc.beimi.gametype , this);\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        username:{\n            default:null ,\n            type:cc.Label\n        },\n        goldcoins:{\n            default:null ,\n            type:cc.Label\n        },\n        selected:{\n            default:null ,\n            type : cc.Node\n        },\n        creator:{\n            default:null ,\n            type : cc.Node\n        },\n        selectcards:{\n            default:null ,\n            type : cc.Node\n        },\n        selectcolor:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.selected.active = false ;\n        this.creator.active = false ;\n    },\n    init:function(playerdata , inx , tablepos){\n        this.data = playerdata ;    //存放玩家数据\n        this.tablepos = tablepos ;\n        if(inx == 0){\n            this.selectcards.parent.x = this.selectcards.parent.x * -1 ;\n        }else if(inx == 1){\n            this.selectcards.parent.x = this.selectcards.parent.x * -1 ;\n        }\n\n        this.username.string = playerdata.username ;\n        this.goldcoins.string = playerdata.goldcoins ;\n    },\n    banker:function(){\n        this.creator.active = true ;\n    },\n    selecting:function(){\n        if(this.data.id != cc.beimi.user.id){\n            this.selectcards.active = true ;\n            let ani = this.selectcolor.getComponent(cc.Animation);\n            this.animState = ani.play(\"majiang_select\") ;\n            // 设置循环模式为 Loop\n            this.animState.wrapMode = cc.WrapMode.Loop;\n            this.animState.repeatCount = 20; //最大不超过 20次\n        }\n    },\n    selectresult:function(data){\n        for(var i = 0 ; i < this.selected.children.length ; i++){\n            this.selected.children[i].active = false ;\n            if(this.selected.children[i].name == data.color){\n                this.selected.children[i].active = true;\n            }\n        }\n        this.selected.active = true ;\n        if(this.data.id != cc.beimi.user.id) {\n            if (this.animState != null) {\n                this.animState.stop(\"majiang_select\");\n            }\n        }\n    },\n    clean:function(){\n        this.creator.active = false ;\n        for(var i = 0 ; i < this.selected.children.length ; i++){\n            this.selected.children[i].active = false ;\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        workitem:{\n            default: null,\n            type: cc.Node\n        },\n        myscore:{   //底牌\n            default: null,\n            type: cc.Label\n        },\n        myflag:{\n            default: null,\n            type: cc.Node\n        },\n        player_1:{\n            default: null,\n            type: cc.Node\n        },\n        player_1_flag:{\n            default: null,\n            type: cc.Node\n        },\n        player_1_name:{\n            default: null,\n            type: cc.Label\n        },\n        player_1_score:{\n            default: null,\n            type: cc.Label\n        },\n        player_2:{\n            default: null,\n            type: cc.Node\n        },\n        player_2_flag:{\n            default: null,\n            type: cc.Node\n        },\n        player_2_name:{\n            default: null,\n            type: cc.Label\n        },\n        player_2_score:{\n            default: null,\n            type: cc.Label\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        /**\n         * SummaryClick发射的事件，方便统一处理 / 开始\n         */\n        this.workitem.on(\"begin\",function(event){\n            if(self.context !=null){\n                self.context.summarypage.destroy();\n                self.context.restart();\n            }\n            event.stopPropagation();\n        });\n        /**\n         * SummaryClick发射的事件，方便统一处理 / 开始\n         */\n        this.workitem.on(\"close\",function(event){\n            if(self.context !=null){\n                self.context.summarypage.destroy();\n            }\n            event.stopPropagation();\n        });\n    },\n    create:function(context , data){\n        this.context = context ;\n        var index = 0 ;\n        for(var inx = 0 ; inx < data.players.length ; inx++){\n            var player = data.players[inx] ;\n\n        }\n    }\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\n\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        playerprefab:{\n            default : null ,\n            type : cc.Prefab\n        },\n        statebtn:{\n            default : null ,\n            type : cc.Node\n        },\n        mjtimer:{\n            default:null ,\n            type:cc.Label\n        },\n        desk_tip:{\n            default:null ,\n            type : cc.Node\n        },\n        desk_cards:{\n            default:null ,\n            type : cc.Label\n        },\n        cards_current:{\n            default:null ,\n            type : cc.Prefab\n        },\n        cards_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        one_card_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        left_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        right_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        top_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        cards_left:{\n            default:null ,\n            type : cc.Prefab\n        },\n        cards_right:{\n            default:null ,\n            type : cc.Prefab\n        },\n        cards_top:{\n            default:null ,\n            type : cc.Prefab\n        },\n        takecards_one:{         //我的和 对家出的牌\n            default:null ,\n            type : cc.Prefab\n        },\n        takecards_left:{\n            default:null ,\n            type : cc.Prefab\n        },\n        takecards_right:{\n            default:null ,\n            type : cc.Prefab\n        },\n        deskcards_current_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        deskcards_right_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        deskcards_top_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        deskcards_left_panel:{\n            default:null ,\n            type : cc.Node\n        },\n        searchlight:{\n            default:null ,\n            type : cc.Node\n        },\n        actionnode_two:{        //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        actionnode_two_list:{        //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        actionnode_three:{      //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        actionnode_three_list:{      //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        actionnode_deal:{      //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        action_gang_ming_prefab:{\n            default:null ,\n            type : cc.Prefab\n        },\n        action_gang_an_prefab:{\n            default:null ,\n            type : cc.Prefab\n        },\n        cards_gang_ming_prefab:{\n            default:null ,\n            type : cc.Prefab\n        },\n        cards_gang_an_prefab:{\n            default:null ,\n            type : cc.Prefab\n        },\n        roomid:{\n            default : null ,\n            type : cc.Label\n        },\n        gang_current:{        //动作节点\n            default:null ,\n            type : cc.Node\n        },\n        summary:{\n            default:null ,\n            type : cc.Prefab\n        },\n        inviteplayer:{\n            default:null ,\n            type : cc.Prefab\n        },\n        hu_cards_current:{\n            default:null ,\n            type : cc.Node\n        },\n        hu_cards_top:{\n            default:null ,\n            type : cc.Node\n        },\n        hu_cards_left:{\n            default:null ,\n            type : cc.Node\n        },\n        hu_cards_right:{\n            default:null ,\n            type : cc.Node\n        },\n        mask:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    /**\n     * 重构后，只有两个消息类型\n     */\n    onLoad: function () {\n        this.initdata(true);\n        this.resize();\n        let self = this ;\n        if(this.mask != null){\n            this.mask.active = false ;\n        }\n        if(this.ready()) {\n            let socket = this.socket();\n            this.routes = {};\n            /**\n             * 已初始的玩家对象池 ， 牌局结束 或者 有新玩家加入， 老玩家离开 等事件的时候，需要做对象池回收\n             * @type {Array}\n             */\n            this.playersarray = new Array();        //玩家列表\n\n            this.playercards = new Array();         //手牌对象\n\n            this.leftcards = new Array();           //左侧玩家手牌\n            this.rightcards = new Array();          //右侧玩家手牌\n            this.topcards = new Array();           //对家手牌\n\n            this.deskcards = new Array();           //当前玩家和 对家 已出牌\n\n            this.actioncards = new Array();           //当前玩家和 对家 已出牌\n\n            this.inited = false;\n\n            this.centertimer = null;\n\n            this.summarypage = null ;\n\n\n            this.exchange_state(\"init\", this);\n\n            /**\n             * 发射的事件， 在 出牌双击 / 滑动出牌的时候发射的，此处用于接受后统一处理， 避免高度耦合\n             * 之所以这样设计，是因为在TakeMJCard里需要引用 麻将牌的 对象池 和 出牌的对象池，如果采用对象传入或者 通过find获取的方式处理\n             * 则会导致高度的 组件耦合，不利于系统 未来扩展，也会导致 业务逻辑交叉/混乱\n             * 无论 胡牌/杠/碰/吃，都需要采用这种方式处理\n             */\n            this.node.on('takecard', function (event) {\n                let card = event.target.getComponent(\"TakeMJCard\");\n                if (card != null) {\n                    let card_script = card.target.getComponent(\"HandCards\");\n                    /**\n                     * 提交数据，等待服务器返回\n                     */\n                        //开始匹配\n\n                    socket.emit(\"doplaycards\", card_script.value);\n                }\n                event.stopPropagation();\n            });\n            /**\n             * ActionEvent发射的事件 ， 点击 杠 , 通知服务器端，用户点击了 杠 动作，服务器端进行处理，处理完毕后通知客户端后续动作\n             */\n            this.node.on(\"gang\", function (event) {\n                self.dealActionProcess(self);\n                socket.emit(\"selectaction\", \"gang\");\n\n                event.stopPropagation();\n            });\n            /**\n             * ActionEvent发射的事件 ， 点击 碰\n             */\n            this.node.on(\"peng\", function (event) {\n                self.dealActionProcess(self);\n                socket.emit(\"selectaction\", \"peng\");\n\n                event.stopPropagation();\n            });\n            /**\n             * ActionEvent发射的事件 ， 点击 吃\n             */\n            this.node.on(\"chi\", function (event) {\n                self.dealActionProcess(self);\n                socket.emit(\"selectaction\", \"chi\");\n                event.stopPropagation();\n            });\n            /**\n             * ActionEvent发射的事件 ， 点击 胡\n             */\n            this.node.on(\"hu\", function (event) {\n                self.dealActionProcess(self);\n                socket.emit(\"selectaction\", \"hu\");\n                event.stopPropagation();\n            });\n            /**\n             * ActionEvent发射的事件 ， 点击 过\n             */\n            this.node.on(\"guo\", function (event) {\n                self.dealActionProcess(self);\n                socket.emit(\"selectaction\", \"guo\");\n\n                event.stopPropagation();\n            });\n\n            if(cc.beimi!=null){\n                if(cc.beimi.gamestatus!=null && cc.beimi.gamestatus == \"playing\"){\n                    //恢复数据\n                    this.recovery() ;\n                }else if(cc.beimi.extparams!=null && cc.beimi.extparams.gamemodel == \"room\"){\n                    /**\n                     * 房卡模式，开始启动游戏，当前玩家进入等待游戏的状态，显示邀请好友游戏，并分配 6位数字的房间号码\n                     */\n                    /**\n                     * 处理完毕，清理掉全局变量\n                     * @type {null}\n                     */\n                    this.invite = cc.instantiate(this.inviteplayer) ;\n                }\n                this.initgame();\n            }\n        }\n    },\n    initgame:function(){\n        let self = this ;\n        if(this.ready()){\n            let socket = this.socket();\n            /**\n             * 接受指令\n             */\n\n            this.map(\"joinroom\" , this.joinroom_event) ;          //加入房价\n            this.map(\"players\" , this.players_event) ;            //接受玩家列表\n\n            this.map(\"banker\" , this.banker_event) ;          //庄家\n\n            this.map(\"play\" , this.play_event) ;          //人齐了，接收发牌信息\n\n            this.map(\"selectcolor\" , this.selectcolor_event) ;          //从服务端发送的 定缺的 指令，如果服务端玩法里不包含定缺， 可以不发送这个指令而是直接开始打牌\n\n            this.map(\"selectresult\" , this.selectresult_event) ;          //从服务端发送的 定缺的 指令，如果服务端玩法里不包含定缺， 可以不发送这个指令而是直接开始打牌\n\n            this.map(\"lasthands\" , this.lasthands_event) ;              //庄家开始打牌了，允许出牌\n\n            this.map(\"takecards\" , this.takecard_event) ;                //我出的牌\n\n            this.map(\"action\" , this.action_event) ;                     //服务端发送的 动作事件，有杠碰吃胡过可以选择\n\n            this.map(\"selectaction\" , this.selectaction_event) ;        //我选择的动作， 杠碰吃胡\n\n            this.map(\"dealcard\" , this.dealcard_event) ;                //我出的牌\n\n            this.map(\"allcards\" , this.allcards_event) ;                //我出的牌\n\n            this.map(\"recovery\" , this.recovery_event) ;              //恢复牌局数据\n\n            this.map(\"roomready\" , this.roomready_event) ;              //提示\n\n            this.map(\"playeready\" , this.playeready_event) ;            //玩家点击了开始游戏 ， 即准备就绪\n\n            socket.on(\"command\" , function(result){\n                cc.beimi.gamestatus = \"playing\" ;\n                if(self.inited == true){\n                    var data = self.parse(result) ;\n                    self.route(data.command)(data , self);\n                }\n            });\n\n            var param = {\n                token:cc.beimi.authorization,\n                playway:cc.beimi.extparams.playway,\n                orgi:cc.beimi.user.orgi,\n                extparams:cc.beimi.extparams\n            } ;\n            socket.exec(\"joinroom\" ,param) ;\n\n            this.inited = true ;\n        }\n    },\n    initdata:function(initplayer){\n        /**\n         * 适配屏幕尺寸\n         */\n\n        if(initplayer == true){\n            /**\n             * 预制的 对象池\n             * @type {cc.NodePool}\n             */\n            this.playerspool = new cc.NodePool();\n            /**\n             *\n             * 初始化玩家 的 对象池\n             */\n            for (var i = 0; i < 4; i++) {\n                this.playerspool.put(cc.instantiate(this.playerprefab));\n            }\n        }\n\n        /**\n         * 当前玩家的 麻将牌的 对象池\n         * @type {cc.NodePool}\n         */\n        this.cardpool = new cc.NodePool();\n        /**\n         * 初始化当前玩家的麻将牌 对象池\n         */\n        for (var i = 0; i < 14; i++) {\n            this.cardpool.put(cc.instantiate(this.cards_current));\n        }\n    },\n    /**\n     * 新创建牌局，首个玩家加入，进入等待状态，等待其他玩家加入，服务端会推送 players数据\n     * @param data\n     * @param context\n     */\n    joinroom_event:function(data , context){\n        if(data.cardroom == true && context.inviteplayer!=null){\n            let script = context.invite.getComponent(\"BeiMiQR\")\n            script.init(data.roomid);\n            context.invite.parent = context.root() ;\n\n            if(context.roomid != null){\n                context.roomid.string = data.roomid ;\n            }\n        }else{\n            if(context.roomid != null){\n                context.roomid.string = \"大厅房间\" ;\n            }\n        }\n\n        var player = context.playerspool.get();\n        var playerscript = player.getComponent(\"MaJiangPlayer\");\n        //var playerscript = player.getComponent(\"MaJiangPlayer\");\n        var inx = null , tablepos = \"\";\n        if(data.player.id == cc.beimi.user.id){\n            player.setPosition(-570 , -150);\n            tablepos = \"current\" ;\n            context.index = data.index ;\n        }else{\n            inx = data.index - context.index ;\n            if(inx == 1){\n                //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                player.setPosition(570 , 50);\n                tablepos = \"right\" ;\n            }else if(inx == 2){\n                //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                player.setPosition(400 , 300);\n                tablepos = \"top\" ;\n            }else if(inx == 3){\n                //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                player.setPosition(-570 , 50);\n                tablepos = \"left\" ;\n            }\n        }\n\n\n        playerscript.init(data.player , inx , tablepos);\n        player.parent = context.root();\n        context.playersarray.push(player) ;\n        /**\n         * 初始化状态，首个玩家加入，然后开始等待其他玩家 ， 如果是 恢复数据， 则不会进入\n         */\n        //this.statusbtn.active = true ;\n    },\n    /**\n     * 房卡模式下，邀请的好友人到齐了\n     * @param data\n     * @param context\n     */\n    roomready_event:function(data , context){\n        if(context.invite!=null){\n            context.invite.destroy();\n        }\n    },\n    /**\n     *\n     * @param data\n     * @param context\n     */\n    playeready_event:function(data , context){\n        if(data.userid == cc.beimi.user.id){\n            context.exchange_state(\"ready\" , context);\n        }\n    },\n    /**\n     * 新创建牌局，首个玩家加入，进入等待状态，等待其他玩家加入，服务端会推送 players数据\n     * @param data\n     * @param context\n     */\n    takecard_event:function(data , context){\n        if(data.userid == cc.beimi.user.id) {\n            for (var inx = 0; inx < context.playercards.length; ) {\n                let handcards = context.playercards[inx].getComponent(\"HandCards\");\n                if (data.card == handcards.value) {\n\n                    context.playercards[inx].zIndex = 0 ;\n                    /**\n                     * 从数组中移除\n                     */\n                    context.playercards[inx].parent = null;\n\n                    handcards.reinit();\n                    /**\n                     * 还回 对象池\n                     */\n                    context.cardpool.put(context.playercards[inx]);\n\n                    /**\n                     * 从数组中移除\n                     */\n                    context.playercards.splice(inx, 1);\n\n                    /**\n                     * 放到桌面 ， 需要重构\n                     */\n                    let desk_card = cc.instantiate(context.takecards_one);\n                    let temp = desk_card.getComponent(\"DeskCards\");\n                    temp.init(handcards.value);\n\n                    context.deskcards.push(desk_card);\n                    desk_card.parent = context.deskcards_current_panel;\n                }else{\n                    handcards.relastone();\n                    if(handcards.selectcolor == true){\n                        context.playercards[inx].zIndex = 1000 + handcards.value ;\n                    }else{\n                        if(handcards.value >= 0){\n                            context.playercards[inx].zIndex = handcards.value ;\n                        }else{\n                            context.playercards[inx].zIndex = 200 + handcards.value ;\n                        }\n                    }\n                    inx = inx + 1 ;     //遍历 ++,不处理移除的 牌\n                }\n            }\n            /**\n             * 重新排序\n             */\n            context.layout(context.cards_panel,function(fir ,sec){\n                return fir.zIndex - sec.zIndex ;\n            });\n            context.exchange_state(\"takecard\" , context);  //隐藏 提示状态\n        }else{\n            //其他玩家出牌\n            let temp = context.player(data.userid , context) ;\n            let cardpanel  , cardprefab , deskcardpanel;\n            if(temp.tablepos == \"right\"){\n                for(var inx = 0 ; inx < context.right_panel.children.length ; inx++){\n                    let right_temp = context.right_panel.children[inx].getComponent(\"SpecCards\");\n                    right_temp.reinit();\n                }\n\n                cardpanel = context.right_panel ;\n                cardprefab = context.takecards_right ;\n                deskcardpanel = context.deskcards_right_panel ;\n\n            }else if(temp.tablepos == \"left\"){\n                for(var inx = 0 ; inx < context.left_panel.children.length ; inx++){\n                    let left_temp = context.left_panel.children[inx].getComponent(\"SpecCards\");\n                    left_temp.reinit();\n                }\n\n                cardpanel = context.left_panel ;\n                cardprefab = context.takecards_left ;\n                deskcardpanel = context.deskcards_left_panel ;\n            }else if(temp.tablepos == \"top\"){\n                for(var inx = 0 ; inx < context.top_panel.children.length ; inx++){\n                    let top_temp = context.top_panel.children[inx].getComponent(\"SpecCards\");\n                    top_temp.reinit();\n                }\n\n                cardpanel = context.top_panel ;\n                cardprefab = context.takecards_one ;\n                deskcardpanel = context.deskcards_top_panel ;\n            }\n            /**\n             * 销毁其中一个对象\n             */\n            if(cardpanel!=null){\n                cardpanel.children[cardpanel.children.length - 1].destroy();\n            }\n            let desk_card = cc.instantiate(cardprefab);\n            let desk_script = desk_card.getComponent(\"DeskCards\");\n            desk_script.init(data.card);\n            desk_card.parent = deskcardpanel ;\n\n            context.deskcards.push(desk_card);\n        }\n    },\n    recover_desk_cards:function(userid , card , context){\n        if(userid == cc.beimi.user.id) {\n            /**\n             * 放到桌面 ， 需要重构\n             */\n            let desk_card = cc.instantiate(context.takecards_one);\n            let temp = desk_card.getComponent(\"DeskCards\");\n            temp.init(card);\n\n            context.deskcards.push(desk_card);\n            desk_card.parent = context.deskcards_current_panel;\n        }else{\n            //其他玩家出牌\n            let temp = context.player(userid , context) ;\n            let cardpanel  , cardprefab , deskcardpanel;\n            if(temp.tablepos == \"right\"){\n\n                cardpanel = context.right_panel ;\n                cardprefab = context.takecards_right ;\n                deskcardpanel = context.deskcards_right_panel ;\n\n            }else if(temp.tablepos == \"left\"){\n\n                cardpanel = context.left_panel ;\n                cardprefab = context.takecards_left ;\n                deskcardpanel = context.deskcards_left_panel ;\n            }else if(temp.tablepos == \"top\"){\n\n                cardpanel = context.top_panel ;\n                cardprefab = context.takecards_one ;\n                deskcardpanel = context.deskcards_top_panel ;\n            }\n            let desk_card = cc.instantiate(cardprefab);\n            let desk_script = desk_card.getComponent(\"DeskCards\");\n            desk_script.init(card);\n            desk_card.parent = deskcardpanel ;\n        }\n    },\n    /**\n     * 下一个玩家抓牌的事件， 如果上一个玩家出牌后，没有其他玩家杠、碰、吃、胡等动作，则会同时有一个抓牌的事件，否则，会等待玩家 杠、碰、吃、胡完成\n     * @param data\n     * @param context\n     */\n    dealcard_event:function(data , context){\n        let player = context.player(data.userid , context);\n        context.select_action_searchlight(data, context , player) ;\n\n        if(data.userid == cc.beimi.user.id){\n            context.initDealHandCards(context , data);\n        }else{\n            let inx = 0 ;\n            if(player.tablepos == \"top\"){\n                //context.right_panel ;\n                inx = 1 ;\n            }else if(player.tablepos == \"left\"){\n                inx = 2 ;\n            }\n            context.initPlayerHandCards(0 , 1 , inx , context , true);\n        }\n        context.desk_cards.string = data.deskcards ;\n        if(context.action == \"deal\" && data.userid == cc.beimi.user.id) {\n            //\n        }else{\n            context.exchange_state( \"action\", context);\n        }\n    },\n    select_action_searchlight:function(data , context , player){\n        context.exchange_searchlight(player.tablepos , context);\n        /**\n         */\n        context.exchange_state(\"nextplayer\" , context);\n    },\n    allcards_event:function(data , context){\n        cc.beimi.gamestatus = \"notready\" ;\n        //结算界面，\n        context.gameover = false ;\n        setTimeout(function(){\n            context.summarypage = cc.instantiate(context.summary) ;\n            context.summarypage.parent = context.root() ;\n            let temp = context.summarypage.getComponent(\"MaJiangSummary\") ;\n            temp.create(context , data);\n\n            if(data.gameRoomOver == true){//房间解散\n                context.gameover = true ;\n            }\n        } , 2000);\n        /**\n         */\n        context.exchange_state(\"allcards\" , context);\n    },\n    /**\n     * 恢复牌局数据， 等待服务端推送 Players数据后进行恢复\n     */\n    recoverboard:function(data,context){\n        //this.statebtn.active = false ;\n    },\n    setAction:function(action , context){\n        context.action = action ;\n    },\n    /**\n     * 接收到服务端的 推送的 玩家数据，根据玩家数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    players_event:function(data,context){\n        context.collect(context) ;    //先回收资源，然后再初始化\n        var inx = 0 ;\n        for(var i=0 ; i<data.player.length ; i++){\n            let temp = data.player[i] ;\n            if(temp.id == cc.beimi.user.id){\n                context.index = i ;break ;\n            }\n        }\n        if(data.player.length > 1 && inx >=0){\n            var pos = inx+1 ;\n            while(true){\n                if(pos == data.player.length){pos = 0 ;}\n                if(context.playerexist(data.player[pos], context) == false){\n                    var player = context.playerspool.get();\n                    var playerscript = player.getComponent(\"MaJiangPlayer\");\n                    var tablepos = \"\" ;\n                    var temp = pos - context.index ;\n                    if(temp == 1 || temp == -3){\n                        //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                        player.setPosition(570 , 50);\n                        tablepos = \"right\" ;\n                    }else if(temp == 2 || temp == -2){\n                        //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                        player.setPosition(400 , 300);\n                        tablepos = \"top\" ;\n                    }else if(temp == 3 || temp == -1){\n                        //var playerscript = player.getComponent(\"MaJiangPlayer\");\n                        player.setPosition(-570 , 50);\n                        tablepos = \"left\" ;\n                    }\n\n                    playerscript.init(data.player[pos] , inx , tablepos);\n                    player.parent = context.root();\n                    context.playersarray.push(player) ;\n                }\n                if(pos == inx){break ;}\n                pos = pos + 1;\n            }\n        }\n    },\n    playerexist:function(player,context){\n        var inroom = false ;\n        if(player.id == cc.beimi.user.id){\n            inroom = true ;\n        }else{\n            for(var j = 0 ; j < context.playersarray.length ; j++){\n                let temp = context.playersarray[j];\n                var playerscript = temp.getComponent(\"MaJiangPlayer\");\n                if(playerscript.data.id == player.id){\n                    inroom = true ; break ;\n                }\n            }\n        }\n        return inroom ;\n    },\n    /**\n     * 接受新的庄家数据\n     * @param data\n     * @param context\n     */\n    banker_event:function(data, context){\n        /**\n         *\n         */\n        for(var inx = 0 ; inx<context.playersarray.length ; inx++){\n            let temp = context.playersarray[inx].getComponent(\"MaJiangPlayer\") ;\n            if(temp.data.id == data.userid){\n                temp.banker(); break ;\n            }\n        }\n    },\n    /**\n     * 接收到服务端的 恢复牌局的数据 恢复牌局\n     * @param data\n     * @param context\n     */\n    recovery_event:function(data,context) {\n        var mycards = context.decode(data.player.cards);\n        //context.exchange_state(\"begin\" , context);  //隐藏 提示状态\n        /**\n         * 恢复玩家数据\n         */\n        context.play_event(data.userboard, context) ;\n\n        /**\n         * 恢复庄家数据\n         */\n        context.banker_event(data.banker,context);\n\n        /**\n         *\n         * 恢复定缺数据\n         */\n        context.selectresult_event(data.selectcolor , context);\n\n        /**\n         * 恢复其他玩家定缺数据\n         */\n        for(var i=0 ; i<data.cardsnum.length ; i++){\n            let temp = data.cardsnum[i] ;\n            context.selectresult_event(temp.selectcolor , context) ;\n            var hiscards = context.decode(temp.hiscards);\n            for(var j=0 ; j<hiscards.length ; j++){\n                context.recover_desk_cards(temp.userid , hiscards[j] , context);\n            }\n        }\n        /**\n         * 恢复当前玩家 已出的牌\n         */\n        var hiscards = context.decode(data.hiscards);\n        for(var j=0 ; j<hiscards.length ; j++){\n            context.recover_desk_cards(data.userid , hiscards[j] , context);\n        }\n    },\n    /**\n     * 接受服务端的数据，玩家杠碰、吃胡等动作\n     * @param data\n     * @param context\n     */\n    action_event:function(data, context){\n        context.setAction(\"take\" , context);\n        if(cc.beimi.user.id == data.userid){\n            /**\n             * 隐藏其他动作\n             */\n            context.exchange_state( \"action\", context);\n            /**\n             *\n             */\n            let gang , peng , chi , hu , guo;\n            if(data.deal == true){  //发牌的动作\n                for(var inx = 0 ; inx < context.actionnode_deal.children.length ; inx++){\n                    let temp = context.actionnode_deal.children[inx] ;\n                    if(temp.name == \"gang\"){gang = temp ;}\n                    if(temp.name == \"peng\"){peng = temp ;}\n                    if(temp.name == \"chi\"){chi = temp ;}\n                    if(temp.name == \"hu\"){hu = temp ;}\n                    temp.active = false ;\n                }\n                if(data.gang){gang.active = true ;}\n                if(data.peng){peng.active = true ;}\n                if(data.chi){chi.active = true ;}\n                if(data.hu){hu.active = true ;}\n\n                context.actionnode_deal.active = true ;\n\n                context.setAction(\"deal\" , context);\n            }else{\n                var actionNum = 0 ;\n                if(data.gang == true || data.peng == true || data.chi == true || data.hu == true){\n                    let desk_script = context.actionnode_three.getComponent(\"DeskCards\") ;\n                    desk_script.init(data.card);\n\n                    for(var inx = 0 ; inx < context.actionnode_three_list.children.length ; inx++){\n                        let temp = context.actionnode_three_list.children[inx] ;\n                        if(temp.name == \"gang\"){gang = temp ;}\n                        if(temp.name == \"peng\"){peng = temp ;}\n                        if(temp.name == \"chi\"){chi = temp ;}\n                        if(temp.name == \"hu\"){hu = temp ;}\n                        if(temp.name == \"guo\"){guo = temp ;}\n                        temp.active = false ;\n                    }\n                    if(data.gang){gang.active = true ; actionNum = actionNum + 1 ;}\n                    if(data.peng){peng.active = true ; actionNum = actionNum + 1 ;}\n                    if(data.chi){chi.active = true ; actionNum = actionNum + 1 ;}\n                    if(data.hu){hu.active = true ; actionNum = actionNum + 1 ;}\n                    if(data.deal == false){\n                        guo.active = true;\n                        actionNum = actionNum + 1 ;\n                    }\n                    var posx = 1080 - (actionNum + 1) * 124;\n                    var actionevent = cc.moveTo(0.5, posx, -147);\n                    actionevent.easing(cc.easeIn(3.0));\n                    context.actionnode_three.runAction(actionevent) ;\n\n                    setTimeout(function(){\n                        if(context.action != null){\n                            context.dealActionProcess(context);\n                        }\n                    } , 5000);\n                }\n            }\n        }\n    },\n    selectaction_event:function(data , context){\n        let player = context.player(data.userid , context);\n        /**\n         * 杠碰吃，胡都需要将牌从 触发玩家的 桌牌 里 移除，然后放入当前玩家 桌牌列表里，如果是胡牌，则放到 胡牌 列表里，首先\n         * 首先，需要找到触发对象，如果触发对象不是 all ， 则 直接找到 对象对应的玩家 桌牌列表，并找到 桌牌里 的最后 的 牌，\n         * 然后将此牌 移除即可，如果对象是 all， 则不用做任何处理即可\n         */\n        if(cc.beimi.user.id == data.userid){\n            /**\n             * 碰，显示碰的动画，\n             * 杠，显示杠的动画，杠分为：明杠，暗杠，弯杠，每种动画效果不同，明杠/暗杠需要扣三家分，弯杠需要扣一家分\n             * 胡，根据玩法不同，推倒胡和血流/血战\n             */\n            if(data.target == \"all\") {\n                let rightpre = cc.instantiate(context.action_gang_ming_prefab);\n                rightpre.parent = context.deskcards_right_panel.parent;\n\n                let toppre = cc.instantiate(context.action_gang_ming_prefab);\n                toppre.parent = context.deskcards_top_panel.parent;\n\n                let leftpre = cc.instantiate(context.action_gang_ming_prefab);\n                leftpre.parent = context.deskcards_left_panel.parent;\n            }else{\n                //碰的特效\n                context.select_action_searchlight(data, context , player) ;\n            }\n\n\n\n            if(data.action == \"hu\") {\n                //胡牌了，把胡的牌放入到胡牌列表里，然后 ， 把当前的玩家的牌局置为不可点击\n                let hu_card = cc.instantiate(context.takecards_one);\n                let temp = hu_card.getComponent(\"DeskCards\");\n                temp.init(data.card);\n\n                context.deskcards.push(hu_card);\n                hu_card.setScale (0.5 , 0.5) ;\n                hu_card.parent = context.hu_cards_current;\n                context.mask.active = true ;    //遮罩，不让操作了\n\n            }else{\n                /**\n                 * 杠后移除当前手牌，进入到 杠 列表里\n                 */\n                for(var inx = 0 ; inx < context.playercards.length ; ){\n                    let temp = context.playercards[inx].getComponent(\"HandCards\");\n                    if(data.cardtype == temp.mjtype && data.cardvalue == temp.mjvalue){\n                        context.cardpool.put(context.playercards[inx]) ;\n                        context.playercards.splice(inx, 1) ;\n                    }else{\n                        inx++ ;\n                    }\n                }\n\n                let cards_gang;\n\n                /**\n                 * 刚和碰共用一个 Prefab，都是来自于 cards_gang_ming_prefab ，显示方式也相同， 区别在于：刚显示四张牌，碰显示两张牌\n                 */\n                if (data.actype == \"an\") {\n                    cards_gang = cc.instantiate(context.cards_gang_an_prefab);\n                } else {\n                    cards_gang = cc.instantiate(context.cards_gang_ming_prefab);\n                }\n                let temp_script = cards_gang.getComponent(\"GangAction\");\n                if (data.action == \"gang\") {\n                    temp_script.init(data.card, true);\n                } else {\n                    temp_script.init(data.card, false);\n                }\n                if (data.action == \"peng\" || data.action == \"chi\") {\n                    /**\n                     *\n                     * 碰了以后的\n                     */\n                    let temp = context.cards_panel.children[context.cards_panel.children.length - 1];\n                    if (temp != null) {\n                        let script = temp.getComponent(\"HandCards\");\n                        if (script != null) {\n                            script.lastone();\n                        }\n                    }\n                }\n\n                cards_gang.parent = context.gang_current;\n                context.actioncards.push(cards_gang);\n\n                for (var inx = 0; inx < context.deskcards.length; inx++) {\n                    var temp = context.deskcards[inx];\n                    if (temp != null) {\n                        var script = temp.getComponent(\"DeskCards\");\n                        if (script != null && script.value == data.card) {\n                            temp.destroy();\n                            context.deskcards.splice(inx, inx + 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            context.exchange_state(\"nextplayer\" , context);\n\n            /**\n             * 隐藏 动作 按钮\n             */\n            context.exchange_state( \"action\", context);\n        }else{\n            //以下代码是用于找到 杠/碰/吃/胡牌的 目标牌  ， 然后将此牌 从 桌面牌中移除\n            let temp = context.player(data.target, context), deskcardpanel;\n            if (temp.tablepos == \"right\") {\n                deskcardpanel = context.deskcards_right_panel;\n            } else if (temp.tablepos == \"left\") {\n                deskcardpanel = context.deskcards_left_panel;\n            } else if (temp.tablepos == \"top\") {\n                deskcardpanel = context.deskcards_top_panel;\n            }\n            if (deskcardpanel.children.length > 0) {\n                deskcardpanel.children[deskcardpanel.children.length - 1].destroy();\n            }\n        }\n    },\n    /**\n     * 接收发牌信息，需要根据玩家位置确定是哪家的牌\n     * @param data\n     * @param context\n     */\n    play_event:function(data , context ){\n        cc.beimi.gamestatus = \"playing\" ;\n        /**\n         * 改变状态，开始发牌\n         */\n        context.exchange_state(\"begin\" , context);\n\n\n        var temp_player = data.player ;\n        var cards = context.decode(temp_player.cards);\n\n        setTimeout(function(){\n            context.calcdesc_cards(context , 136 , data.deskcards) ;\n        } , 0) ;\n        var groupNums = 0 ;\n        for(var times = 0 ; times < 4 ; times++){\n            context.initMjCards(groupNums , context , cards , temp_player.banker) ;\n            /**\n             * 初始化其他玩家数据\n             */\n            var inx = 0 ;\n            for(var i=0 ; i<data.players.length ; i++){\n                if(data.players[i].playuser != cc.beimi.user.id){\n                    context.initPlayerHandCards(groupNums , data.players[inx++].deskcards , inx,context , false);\n                }\n            }\n            groupNums = groupNums + 1 ;\n        }\n\n        let ani = context.cards_panel.getComponent(cc.Animation);\n        ani.play(\"majiang_reorder\") ;\n\n\n        var maxvalue  = -100;\n        var maxvalluecard ;\n        for(var i=0 ; i<context.playercards.length ; i++ ){\n            let temp_script = context.playercards[i].getComponent(\"HandCards\") ;\n            if(temp_script.value >= 0){\n                context.playercards[i].zIndex = temp_script.value ;\n            }else{\n                context.playercards[i].zIndex = 200 + temp_script.value ;\n            }\n            if(context.playercards[i].zIndex > maxvalue){\n                maxvalue = context.playercards[i].zIndex ;\n                maxvalluecard = context.playercards[i] ;\n            }\n        }\n        /**\n         * 重新排序\n         */\n        context.layout(context.cards_panel,function(fir ,sec){\n            return fir.zIndex - sec.zIndex ;\n        });\n\n\n        setTimeout(function(){\n            if(temp_player.banker == true && maxvalluecard!=null){\n                maxvalluecard.getComponent(\"HandCards\").lastone() ;\n            }\n        } , 200) ;\n\n\n        context.exchange_state(\"play\" , context);\n\n        /**\n         * 统一处理排序 的动画\n         */\n\n        /**\n         * 初始化状态，首个玩家加入，然后开始等待其他玩家 ， 如果是 恢复数据， 则不会进入\n         */\n        //this.statusbtn.active = true ;\n    },\n    /**\n     * 开始定缺\n     * @param data\n     * @param context\n     */\n    selectcolor_event:function(data, context){\n        /**\n         *\n         */\n        for(var inx = 0 ; inx<context.playersarray.length ; inx++){\n            let temp = context.playersarray[inx].getComponent(\"MaJiangPlayer\") ;\n            if(temp.data.id == cc.beimi.user.id){\n                temp.selecting();\n            }\n        }\n\n        context.exchange_state(\"selectcolor\" , context);\n    },\n    /**\n     * 通知定缺结果\n     * @param data\n     * @param context\n     */\n    selectresult_event:function(data, context){\n        /**\n         *\n         */\n        for(var inx = 0 ; inx<context.playersarray.length ; inx++){\n            let temp = context.playersarray[inx].getComponent(\"MaJiangPlayer\") ;\n            if(temp.data.id == data.userid){\n                temp.selectresult(data);\n                break ;\n            }\n        }\n        if(data.userid == cc.beimi.user.id){\n            context.exchange_state(\"selectresult\" , context);\n            if(data.color < 10){\n                context.changecolor(data , context);\n            }\n        }\n    },\n    /**\n     * 开始打牌，状态标记\n     * @param data\n     * @param context\n     */\n    lasthands_event:function(data, context){\n        if(data.userid == cc.beimi.user.id){    //该我出牌 , 庄家出牌，可以不用判断是否庄家了 ，不过，庄家数据已经传过来了\n            context.exchange_state(\"lasthands\" , context);\n            context.exchange_searchlight(\"current\",context);\n        }else{\n            context.exchange_state(\"otherplayer\" , context);    //当前玩家出牌，计时器开始计时，探照灯照向该玩家\n            for(var inx = 0 ; inx<context.playersarray.length ; inx++){\n                let temp = context.playersarray[inx].getComponent(\"MaJiangPlayer\") ;\n                if(temp.data.id == data.userid){\n                    context.exchange_searchlight(temp.tablepos,context);; break ;\n                }\n            }\n        }\n    },\n    changecolor:function(data , context){\n        let lastcard ;\n        for(var inx = 0 ; inx < context.playercards.length ; inx++){\n            let temp = context.playercards[inx].getComponent(\"HandCards\");\n            temp.relastone();\n            if(parseInt(temp.value / 36) == data.color && temp.value >= 0){\n                temp.selected();\n                context.playercards[inx].zIndex = 1000 + temp.value ;\n                if(lastcard == null || lastcard.zIndex < context.playercards[inx].zIndex){\n                    lastcard = context.playercards[inx] ;\n                }\n            }\n        }\n        /**\n         * 重新排序\n         */\n        context.layout(context.cards_panel,function(fir ,sec){\n            return fir.zIndex - sec.zIndex ;\n        });\n        if(data.banker == cc.beimi.user.id && lastcard != null){\n            let temp = lastcard.getComponent(\"HandCards\");\n            temp.lastone();\n        }\n    },\n    /**\n     * 显示 剩余牌\n     * @param start\n     * @param end\n     */\n    calcdesc_cards:function(context ,start , end){\n        start = start - 1 ;\n        if(start > end){\n            context.desk_cards.string = start ;\n            setTimeout(function(){\n                context.calcdesc_cards(context , start , end ) ;\n            } , 15) ;\n        }\n    },\n    initDealHandCards:function(context , data){\n        let temp = context.cardpool.get();\n        let temp_script = temp.getComponent(\"HandCards\") ;\n\n        context.playercards.push(temp);\n\n        temp_script.init(data.card);\n\n        temp_script.lastone();\n        if(parseInt(data.card / 36) == data.color && data.card >= 0){\n            temp_script.selected() ;\n        }\n        temp.zIndex = 2000; //直接放到最后了，出牌后，恢复 zIndex\n        temp.parent = context.cards_panel ;  //庄家的最后一张牌\n    },\n    /**\n     * 初始化其他玩家手牌，\n     * @param groupNums\n     * @param deskcards\n     * @param inx\n     * @param context\n     * @param spec 是否特殊的牌，即刚抓起来的牌\n     */\n    initPlayerHandCards:function(groupNums , deskcards , inx , context , spec){\n        let parent = context.right_panel  ;\n        let cardarray = context.rightcards;\n        let prefab = context.cards_right ;\n\n        if(inx == 1){\n            parent = context.top_panel  ;\n            cardarray = context.topcards   ;\n            prefab = context.cards_top ;\n        }else if(inx == 2){\n            parent = context.left_panel  ;\n            cardarray = context.leftcards;\n            prefab = context.cards_left ;\n        }\n        context.initOtherCards(groupNums , context , deskcards , prefab , cardarray , parent , spec , inx);    //左侧，\n    },\n    initOtherCards:function(group , context , cards , prefab , cardsarray, parent , spec , inx){\n        for(var i=group*4 ; i< cards && i<(group+1)*4 ; i++) {\n            //let temp = context.cardpool.get();\n            //temp.parent = parent ;\n            let temp = cc.instantiate(prefab) ;\n            let temp_script = temp.getComponent(\"SpecCards\") ;\n            temp_script.init(spec,inx);\n\n            temp.parent = parent ;\n            cardsarray.push(temp) ;\n        }\n    },\n    initMjCards:function(group , context , cards , banker){\n        for(var i=group*4 ; i< cards.length && i<(group+1)*4 ; i++){\n            let temp = context.cardpool.get();\n            let temp_script = temp.getComponent(\"HandCards\") ;\n\n            context.playercards.push(temp);\n\n            temp_script.init(cards[i]);\n\n            if(banker == true && i == (cards.length - 1)){\n                temp.parent = context.one_card_panel ;  //庄家的最后一张牌\n            }else{\n                temp.parent = context.cards_panel ;\n            }\n\n            setTimeout(function(){\n                temp.parent = context.cards_panel ;\n            } , 200) ;\n        }\n    },\n    /**\n     * 回收系统资源，用于清理资源\n     * @param context\n     */\n    collect:function(context){\n        for(var i=0 ; i<context.playersarray.length ; ){\n            let player = context.playersarray[i] ;\n            var playerscript = player.getComponent(\"MaJiangPlayer\");\n            if(playerscript.data.id != cc.beimi.user.id){       //当前 玩家不回收，最终 Destroy 的时候会被回收\n                context.playerspool.put(player);\n                context.playersarray.splice(i,1) ;\n            }else{\n                i++ ;\n            }\n        }\n    },\n    /**\n     * 按钮操作，点击 开始游戏按钮后的触发动作，进入计时，然后等待服务端推送数据和 状态机流程流转\n     */\n    waittingForPlayers:function(){\n        this.exchange_state(\"ready\" , this);\n    },\n    player:function(pid , context){\n        let player ;\n        for(var inx = 0 ; inx<context.playersarray.length ; inx++){\n            let temp = context.playersarray[inx].getComponent(\"MaJiangPlayer\") ;\n            if(temp.data.id == pid){\n                player = temp ; break ;\n            }\n        }\n        return player ;\n    },\n    /**\n     * 状态切换，使用状态参数 切换，避免直接修改 对象状态，避免混乱\n     */\n    exchange_state:function(state , object){\n        let readybtn = null , waitting = null , selectbtn = null , banker = null ;\n        for(var i=0 ; i<object.statebtn.children.length ; i++){\n            let target = object.statebtn.children[i] ;\n            if(target.name == \"readybtn\"){\n                readybtn = target ;\n            }else if(target.name == \"waitting\"){\n                waitting = target ;\n            }else if(target.name == \"select\"){\n                selectbtn = target ;\n            }else if(target.name == \"banker\"){\n                banker = target ;\n            }\n            target.active = false ;\n        };\n        switch(state){\n            case \"init\" :\n                object.desk_tip.active = false;\n                readybtn.active = true ;\n                object.actionnode_deal.active =false ;\n\n                /**\n                 * 探照灯 熄灭\n                 */\n                object.exchange_searchlight(\"none\",object);\n\n                break;\n            case \"ready\" :\n                waitting.active = true ;\n                if(cc.beimi.data!=null && cc.beimi.data.enableai == true) {\n                    object.timer(object, cc.beimi.data.waittime);\n                }else{\n                    object.timer(object, cc.beimi.data.noaiwaitime);\n                }\n                break;\n            case \"begin\" :\n                waitting.active = false ;\n                /**\n                 * 显示 当前还有多少张底牌\n                 * @type {boolean}\n                 */\n                object.desk_tip.active = true;\n                /**\n                 * 开始发牌动画，取消所有进行中的计时器\n                 */\n                object.canceltimer(object);\n                break;\n            case \"play\" :\n                /**\n                 * 一个短暂的状态，等待下一步指令是 定缺 还是直接开始打牌 ， 持续时间的计时器是 2秒\n                 */\n                object.timer(object , 2) ;\n                break   ;\n            case \"selectcolor\" :\n                /**\n                 * 定缺 ，由服务端确定是否有此个节点，下个版本将会实现流程引擎控制 游戏 节点，一切都在服务端 进行配置工作\n                 * @type {boolean}\n                 */\n                object.exchange_searchlight(\"current\",object);\n                selectbtn.active = true ;\n                object.timer(object , 5) ;\n                break   ;\n            case \"selectresult\" :\n                /**\n                 * 选择了定缺结果，关闭选择按钮\n                 * @type {boolean}\n                 */\n                selectbtn.active = false ;\n                object.canceltimer(object) ;\n                break   ;\n            case \"lasthands\" :\n                /**\n                 * 选择了定缺结果，关闭选择按钮\n                 * @type {boolean}\n                 */\n                banker.active = true ;\n                /**\n                 * 计时器方向\n                 */\n                object.timer(object , 8) ;\n                break   ;\n            case \"otherplayer\" :\n                /**\n                 * 计时器方向\n                 */\n                object.timer(object , 8) ;\n                break   ;\n            case \"takecard\" :\n                /**\n                 * 选择了定缺结果，关闭选择按钮\n                 * @type {boolean}\n                 */\n                banker.active = false;\n                //object.canceltimer(object) ;\n                break   ;\n            case \"action\" :\n                /**\n                 * 隐藏 杠碰吃胡 等 操作\n                 */\n                object.dealActionProcess(object);\n                break;\n            case \"nextplayer\" :\n                /**\n                 * 选择了定缺结果，关闭选择按钮\n                 * @type {boolean}\n                 */\n                object.timer(object , 8) ;\n                break   ;\n            case \"allcards\" :\n                /**\n                 * 都打完了，结束了，回收计时器，回收定缺，回收庄家\n                 * @type {boolean}\n                 */\n                for(var i=0 ; i<object.playersarray.length ; i++){\n                    let player = object.playersarray[i] ;\n                    var playerscript = player.getComponent(\"MaJiangPlayer\");\n                    playerscript.clean();\n                }\n                object.canceltimer(object) ;\n                break   ;\n        }\n    },\n    exchange_searchlight:function(direction , context){\n        for(var inx = 0 ; inx<context.searchlight.children.length ; inx++){\n            if(direction == context.searchlight.children[inx].name){\n                context.searchlight.children[inx].active = true ;\n            }else{\n                context.searchlight.children[inx].active = false ;\n            }\n        }\n    },\n    dealActionProcess:function(object){\n        var actionevent = cc.moveTo(0.5, 1080, -147);\n        actionevent.easing(cc.easeIn(3.0));\n\n        object.actionnode_three.runAction(actionevent) ;\n\n        if(object.action == \"deal\") {\n            object.actionnode_deal.active = false ;\n        }\n        object.action = null ;\n    },\n    canceltimer:function(object){\n        object.unscheduleAllCallbacks();\n        object.mjtimer.string = \"00\" ;\n    },\n    recovery:function(){\n        //this.initgame();\n    },\n    timer:function(object , times){\n        if(times > 9){\n            object.mjtimer.string = times ;\n        }else{\n            object.mjtimer.string = \"0\"+times ;\n        }\n\n        object.callback = function(){\n            times = times - 1 ;\n            if(times >= 0){\n                let text = times ;\n                if(times < 10){\n                    text = \"0\"+times ;\n                }\n                object.mjtimer.string = text ;\n            }\n        }\n        object.unscheduleAllCallbacks();\n        /**\n         * 启动计时器，应该从后台传入 配置数据，控制 等待玩家 的等待时长\n         */\n        object.schedule(object.callback, 1, times, 0);\n    },\n    clean:function(){\n        /**\n         * 销毁玩家数据\n         */\n        for(var i =0 ; i<this.playercards.length ; i++){\n            this.playercards[i].destroy();\n        }\n        this.playercards.splice( 0 , this.playercards.length) ;\n        /**\n         * 销毁桌面上已打出的牌\n         */\n        for(var i =0 ; i<this.deskcards.length ; i++){\n            this.deskcards[i].destroy();\n        }\n        this.deskcards.splice( 0 , this.deskcards.length) ;\n        /**\n         * 销毁左侧玩家的手牌\n         */\n        for(var i =0 ; i<this.leftcards.length ; i++){\n            this.leftcards[i].destroy();\n        }\n        this.leftcards.splice( 0 , this.leftcards.length) ;\n        /**\n         * 销毁右侧玩家的手牌\n         */\n        for(var i =0 ; i<this.rightcards.length ; i++){\n            this.rightcards[i].destroy();\n        }\n        this.rightcards.splice( 0 , this.rightcards.length) ;\n        /**\n         * 销毁对家的手牌\n         */\n        for(var i =0 ; i<this.topcards.length ; i++){\n            this.topcards[i].destroy();\n        }\n        this.topcards.splice( 0 , this.topcards.length) ;\n\n        for(var i=0 ; i<this.actioncards.length ; i++){\n            this.actioncards[i].destroy() ;\n        }\n        this.actioncards.splice(0,this.actioncards.length) ;\n        /**\n         * 玩家数据销毁条件（房间解散，或者有玩家退出房价的时候，所有玩家数据销毁后冲洗排序）\n         */\n        this.mask.active = false ;\n    },\n    restart:function(){\n        /**\n         * 清理桌面\n         */\n        this.clean();\n        /**\n         * 初始化桌面\n         */\n        if(this.gameover == true){\n            for(var inx = 0 ; inx<this.player.length ; inx++){\n                this.player[inx].destroy();\n            }\n            this.player.splice(0 , this.player.length) ;//房间解散，释放资源\n            this.player = new Array();\n\n            this.initdata(true);\n        }else{\n            this.initdata(false);\n        }\n\n        /**\n         * 系统资源回收完毕，发送一个 重新开启游戏的 通知\n         */\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"restart\",\"restart\");\n        }\n    },\n    /**\n     * 开始游戏\n     */\n    startgame:function(){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"start\",\"true\");\n        }\n    },\n    onDestroy:function(){\n        // if(this.ready()) {\n        //     let socket = this.socket();\n        //     socket.disconnect();\n        // }\n        this.inited = false ;\n        this.cleanmap();\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"leave\",\"leave\");\n        }\n    },\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        setting: {\n            default: null,\n            type: cc.Prefab\n        },\n        message: {\n            default: null,\n            type: cc.Prefab\n        },\n        share: {\n            default: null,\n            type: cc.Prefab\n        },\n        playway: {\n            default: null,\n            type: cc.Prefab\n        },\n        feedback: {\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onSettingClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.setting) ;\n        cc.beimi.openwin.parent = this.root();\n    },\n    onMessageClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.message) ;\n        cc.beimi.openwin.parent = this.root();\n    },\n    onShareClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.share) ;\n        cc.beimi.openwin.parent = this.root();\n    },\n    onPlaywayClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.playway) ;\n        cc.beimi.openwin.parent = this.root();\n    },\n    onRecordClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.playway) ;\n        cc.beimi.openwin.parent = this.root();\n    },\n    onFeedBackClick:function(){\n        cc.beimi.openwin = cc.instantiate(this.feedback) ;\n        cc.beimi.openwin.parent = this.root();\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        title_message: {\n            default: null,\n            type: cc.Node\n        },\n        title_contact: {\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad : function() {\n        this.title_contact.active = false ;\n\n        this.title_message.active = true ;\n        /**\n         * 从远程加载数据，如果加载数据失败，则显示提示消息，并注册拖动刷新事件\n         */\n    },\n    onContacts:function(){\n        this.title_contact.active = true ;\n\n        this.title_message.active = false ;\n    },\n    onMessage:function(){\n        this.title_contact.active = false ;\n\n        this.title_message.active = true ;\n    }\n\n\n    // update (dt) {},\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        /**\n         * 适配屏幕尺寸\n         */\n        this.resize();\n    },\n    onClickDizhu:function(){\n        this.loadding();\n        let object = this ;\n        setTimeout(function(){\n            object.scene(\"dizhu\" , object) ;\n        } , 200);\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        posy:cc.Integer,\n        card:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.posy = this.card.y ;\n    },\n    takecard:function(event){\n        var beiMiCard = event.target.parent.getComponent(\"BeiMiCard\") ;\n        if(beiMiCard.game != null){\n            if(event.target.y == this.posy){\n                event.target.y = event.target.y + 30 ;\n                beiMiCard.selected = true ;\n            }else{\n                event.target.y = event.target.y - 30 ;\n                beiMiCard.selected = false ;\n            }\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        username: {\n            default: null,\n            type: cc.Label\n        },\n        goldcoins: {\n            default: null,\n            type: cc.Label\n        },\n        dizhu: {\n            default: null,\n            type: cc.Node\n        },\n        pokertag: {\n            default: null,\n            type: cc.Node\n        },\n        pokercards: {\n            default: null,\n            type: cc.Label\n        },\n        timer:{\n            default: null,\n            type: cc.Node\n        },\n        jsq:{\n            default: null,\n            type: cc.Node\n        },\n        headimg:{\n            default: null,\n            type: cc.Node\n        },\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        timer_num:{\n            default: null,\n            type: cc.Label\n        },\n        result:{\n            default: null,\n            type: cc.Node\n        },\n        lastcards:{\n            default: null,\n            type: cc.Node\n        },\n        cannot:{\n            default: null,\n            type: cc.Node\n        },\n        donot:{\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.cardcount = 0 ;\n        this.cardslist = new Array();\n        this.isRight = false ;\n    },\n    initplayer:function(data , isRight){\n        this.username.string = data.username ;\n        this.userid = data.id ;\n\n        if(isRight == true){\n            this.pokertag.x = this.pokertag.x * -1;\n            this.timer.x = this.timer.x * -1;\n            this.headimg.x = this.headimg.x * -1\n            this.result.x = this.result.x * -1\n\n            this.cannot.x = this.cannot.x * -1\n            this.donot.x = this.donot.x * -1\n\n\n            this.jsq.x = this.jsq.x * -1\n            this.dizhu.x = this.dizhu.x * -1\n            //this.lastcards.x = this.lastcards.x * -1\n            this.lastcards.getComponent(cc.Layout).horizontalDirection = 0 ;\n            this.isRight = isRight ;\n        }\n        if(this.goldcoins){\n            if(data.goldcoins > 10000){\n                var num = this.goldcoins / 10000  ;\n                this.goldcoins.string = num.toFixed(2) + '万';\n            }else{\n                this.goldcoins.string = data.goldcoins;\n            }\n        }\n        if(this.dizhu){\n            this.dizhu.active = false ;\n        }\n        if(this.jsq){\n            this.jsq.active = false ;\n        }\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n        if(this.takecards){\n            this.takecards.active = false ;\n        }\n    },\n    countcards:function(cards){\n        this.cardcount = this.cardcount + cards ;\n        this.pokercards.string = this.cardcount ;\n    },\n    resetcards:function(cards){\n        this.cardcount = cards ;\n        if(this.pokercards != null){\n            this.pokercards.string = this.cardcount ;\n        }\n    },\n    catchtimer:function(times){\n        if(this.jsq){\n            this.jsq.active = true ;\n        }\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n        let self = this ;\n        var gameTimer = require(\"GameTimer\");\n        this.beimitimer = new gameTimer();\n        this.timesrc = this.beimitimer.runtimer(this , this.jsq , this.atlas , this.timer_num , this.timer_num , times);\n    },\n    catchresult:function(data){\n        if(this.beimitimer){\n            this.beimitimer.stoptimer(this , this.jsq , this.timesrc);\n            var dograb = this.atlas.getSpriteFrame('提示_抢地主');\n            var docatch = this.atlas.getSpriteFrame('提示_不抢');\n            if(data.grab){\n                //抢地主\n                if(this.result){\n                    this.result.getComponent(cc.Sprite).spriteFrame = dograb;\n                    this.result.active = true ;\n                }\n                if(this.cannot){\n                    this.cannot.active = false ;\n                }\n                if(this.donot){\n                    this.donot.active = false ;\n                }\n            }else{\n                //叫地主\n                if(this.result){\n                    this.result.getComponent(cc.Sprite).spriteFrame = docatch;\n                    this.result.active = true ;\n                }\n                if(this.cannot){\n                    this.cannot.active = false ;\n                }\n                if(this.donot){\n                    this.donot.active = false ;\n                }\n            }\n        }\n    },\n    hideresult:function(){\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n    },\n    lasthands:function(self, game ,data){      //所有玩家共用的\n        this.hideresult();\n        if(this.beimitimer && this.timesrc) {\n            this.beimitimer.stoptimer(this, this.jsq, this.timesrc);\n        }\n        if(this.userid == data.userid){//设置地主\n            if(this.pokercards){\n                this.countcards(3) ;\n            }\n            /**\n             * 开始计时\n             */\n            this.playtimer(game , 25) ;\n        }\n        this.setDizhuFlag(data);\n    },\n    setDizhuFlag:function(data){\n        if(this.userid == data.userid){//设置地主\n            this.dizhu.active = true ;\n        }else{\n            this.dizhu.active = false ;\n        }\n    },\n    lasttakecards:function(game , self , cardsnum ,cards ,data) {\n        if (this.beimitimer && this.timesrc) {\n            this.beimitimer.stoptimer(this, this.jsq, this.timesrc);\n        }\n        if (this.result) {\n            this.result.active = false;\n        }\n        if (this.cannot) {\n            this.cannot.active = false;\n        }\n        if (this.donot) {\n            this.donot.active = false;\n        }\n        if (this.jsq) {\n            this.jsq.active = false;\n        }\n        if (this.lastcards) {\n            this.lastcards.active = true;\n        }\n        if(this.cardslist.length > 0){\n            for (var i = 0; i < this.cardslist.length; i++) {\n                game.minpokerpool.put(this.cardslist[i]);//回收回去\n            }\n            this.cardslist.splice(0, this.cardslist.length);//删除数组里的所有内容\n        }\n        if (data.donot == false || data.finished == true) {\n            this.resetcards(cardsnum);\n\n            for (var i = 0; i < cards.length; i++) {\n                this.playcards(game, i, cards[i] , cards);\n            }\n            this.layout(this.lastcards , function(fir , sec){\n                return fir.zIndex - sec.zIndex ;\n            });\n        }else{\n            if(data.sameside == \"1\"){\n                self.getPlayer(data.userid).tipdonot();\n            }else{\n                self.getPlayer(data.userid).tipcannot();\n            }\n        }\n    },\n    tipcannot:function(){\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = true ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n    },\n    tipdonot:function(){\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = true ;\n        }\n    },\n    playcards:function(game , index, card , cards){\n        let currpoker = game.minpokerpool.get() ;\n\n        currpoker.x = index * 30 - 30 ;\n        // if(this.isRight == true){\n        //     currpoker.zIndex = 100 - index;\n        // }else{\n        //     currpoker.zIndex = index;\n        // }\n        let zIndex = this.countcard(card , cards) ;\n        currpoker.zIndex = 4 - zIndex ;\n\n        currpoker.parent = this.lastcards ;\n        this.cardslist.push(currpoker) ;\n\n        let beiMiCard = currpoker.getComponent(\"BeiMiCard\");\n        beiMiCard.setCard(card) ;\n        beiMiCard.order();\n    },\n    /**\n     * 按照张数最大的牌排序\n     * @param card\n     * @param lastcards\n     * @returns {number}\n     */\n    countcard:function(card , lastcards){\n        let value = parseInt(card / 4);\n        let count = 0 ;\n        for(var i = 0 ;i<lastcards.length ; i++){\n            let temp = parseInt(lastcards[i] / 4) ;\n            if(value == temp){\n                count = count + 1 ;\n            }\n        }\n        return count ;\n    },\n    playtimer:function(game , times){\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n        if(this.lastcards){\n            this.lastcards.active = false ;\n        }\n        for(var i=0 ; i<this.cardslist.length ; i++){\n            game.minpokerpool.put(this.cardslist[i]) ;//回收回去\n        }\n        let self = this ;\n        var gameTimer = require(\"GameTimer\");\n        this.beimitimer = new gameTimer();\n        this.timesrc = this.beimitimer.runtimer(this , this.jsq , this.atlas , this.timer_num , this.timer_num , times);\n    },\n    clean:function(game){\n        for (var i = 0; i < this.cardslist.length; i++) {\n            game.minpokerpool.put(this.cardslist[i]);//回收回去\n        }\n        this.resetcards(0) ;\n\n        if(this.dizhu){\n            this.dizhu.active = false ;\n        }\n        if(this.jsq){\n            this.jsq.active = false ;\n        }\n        if(this.result){\n            this.result.active = false ;\n        }\n        if(this.cannot){\n            this.cannot.active = false ;\n        }\n        if(this.donot){\n            this.donot.active = false ;\n        }\n        if(this.takecards){\n            this.takecards.active = false ;\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n        extends: beiMiCommon,\n\n        properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ..\n        playway:{\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(){\n        let self = this ;\n\n        var selectPlayway = this.getCommon(\"SelectPlayway\");\n\n        let thisplayway = this.playway.getComponent(\"Playway\");\n\n        let extparams = {\n            gametype : thisplayway.data.code ,\n            playway  : thisplayway.data.id\n        } ;\n        this.closeOpenWin();\n        this.preload(extparams , self);\n    },\n    createRoom:function(event,data){\n        let self = this ;\n        this.loadding();\n        setTimeout(function(){\n            self.scene(data, self) ;\n        },200);\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        grouptitle:{\n            default:null ,\n            type : cc.Label\n        },\n        groupbox:{\n            default:null ,\n            type : cc.Node\n        },\n        groupbox_four:{\n            default:null ,\n            type : cc.Node\n        },\n        content:{\n            default:null ,\n            type : cc.Node\n        },\n        itemname:{\n            default:null ,\n            type : cc.Label\n        },\n        checkbox:{\n            default:null ,\n            type : cc.Node\n        },\n        checkboxnode:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n        let self = this ;\n        this.node.on('checkbox', function (event) {\n            if(self.checkbox!=null){\n                if(self.checked == false){\n                    if(self.data.type == \"radio\"){\n                        for(var inx = 0 ; inx < self.options.length ; inx++){\n                            let script = self.options[inx] ;\n                            script.doUnChecked() ;\n                        }\n                    }\n                    self.doChecked();\n                }else{\n                    if(self.data.type == \"radio\"){\n                        for(var inx = 0 ; inx < self.options.length ; inx++){\n                            let script = self.options[inx] ;\n                            script.doUnChecked() ;\n                        }\n                        self.doChecked();\n                    }else{\n                        self.doUnChecked();\n                    }\n                }\n            }\n            event.stopPropagation() ;\n        });\n    },\n    init:function(group , itempre , items , parentoptions){\n        this.data = group ;\n        this.options = parentoptions ;\n\n        this.groupoptions = new Array();\n        this.checked = false ;\n\n\n        this.grouptitle.string = group.name ;\n        if(this.groupbox!=null && itempre!=null){\n            let itemsnum = 0 ;\n            for(var inx=0 ; inx<items.length ; inx++){\n                if(items[inx].groupid == group.id){\n                    itemsnum = itemsnum + 1;\n                    let newitem = cc.instantiate(itempre) ;\n                    if(group.style != null && group.style == \"three\"){\n                        newitem.parent = this.groupbox ;\n                        this.groupbox_four.active = false ;\n                        this.groupbox.active = true ;\n                    }else{\n                        newitem.parent = this.groupbox_four ;\n                        this.groupbox_four.active = true;\n                        this.groupbox.active = false;\n                    }\n                    let script = newitem.getComponent(\"PlaywayGroup\") ;\n                    this.groupoptions.push(script);\n                    script.inititem(items[inx] , group , this.groupoptions);\n\n                }\n            }\n            if(group.style != null && group.style == \"three\") {\n                if (itemsnum > 4) {\n                    this.content.height = 35 + 50 * (parseInt((itemsnum - 1) / 3) + 1);\n                    this.groupbox.height = 50 * (parseInt((itemsnum - 1) / 3) + 1);\n                }\n            }else{\n                if (itemsnum > 4) {\n                    this.content.height = 35 + 50 * (parseInt((itemsnum - 1)/ 4) + 1);\n                    this.groupbox_four.height = 50 * (parseInt((itemsnum - 1)/ 4) + 1);\n                }\n            }\n        }\n    },\n    inititem:function(item , group , parentoptions){\n        this.data = group ;\n        this.item = item ;\n        this.options = parentoptions;\n        this.itemname.string = item.name ;\n        /**\n         * 以下代码修正 OPTION超出宽度导致 点击错误的 问题\n         */\n        if(group.style == \"three\"){\n            this.itemname.node.width = 160 ;\n            this.itemname.node.x = 107 ;\n        }else{\n            this.itemname.node.width = 105 ;\n            this.itemname.node.x = 77 ;\n        }\n        if(item.defaultvalue == true){\n            this.doChecked();\n        }else{\n            this.doUnChecked();\n        }\n        if(group!=null && group.style!=null && group.style == \"three\"){\n            this.checkboxnode.x = -76 ;\n        }\n    },\n    doChecked:function(){\n        this.checked = true ;\n        this.checkbox.active = true ;\n    },\n    doUnChecked:function(){\n        this.checked = false ;\n        this.checkbox.active = false;\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        tag: {\n            default: null,\n            type: cc.Node\n        },\n        score: {\n            default: null,\n            type: cc.Label\n        },\n        onlineusers: {\n            default: null,\n            type: cc.Label\n        },\n        scorelimit: {\n            default: null,\n            type: cc.Label\n        },\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    init:function(playway){\n        /**\n         * 需要预先请求 在线人数\n         */\n        if(playway){\n            var frameName  = \"初级\";\n            if(playway.level == '2'){\n                frameName = \"高级\"\n            }\n            this.data = playway ;\n\n            if(playway.shuffle == false){\n                this.tag.active = false ;\n            }else{\n                this.tag.active = true;\n            }\n\n            frameName = frameName + playway.skin ;\n\n            this.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(frameName);\n\n            this.onlineusers.string = playway.onlineusers + \" 人 \" ;\n            var min = parseInt(playway.mincoins/1000)+\"千\" ;\n            if(playway.mincoins >= 10000){\n                min = parseInt(playway.mincoins / 10000)+\"万\" ;\n            }\n            var max = parseInt(playway.maxcoins/1000)+\"千\" ;\n            if(playway.maxcoins >= 10000){\n                max = parseInt(playway.maxcoins / 10000)+\"万\" ;\n            }\n            this.scorelimit.string = min + \"-\" + max ;\n\n            this.score.string = playway.score ;\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        target:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(event){\n        let majiang = this.target.getComponent(\"MajiangDataBind\");\n        majiang.startgame();\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n    onClick:function(){\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"checkbox\", true) );\n    },\n    onCreateRoom:function(){\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"createroom\", true) );\n    }\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        memo:{\n            default:null ,\n            type : cc.Label\n        },\n        optionsnode:{\n            default:null ,\n            type : cc.Node\n        },\n        roomtitle:{\n            default:null ,\n            type : cc.Node\n        },\n        optiongroup:{\n            default:null ,\n            type : cc.Prefab\n        },\n        optiongroupitem:{\n            default:null ,\n            type : cc.Prefab\n        },\n        memonode:{\n            default:null ,\n            type : cc.Node\n        },\n        createroom:{\n            default:null ,\n            type : cc.Node\n        },\n        freeopt:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        this.group = new Array();\n        this.node.on('createroom', function (event) {\n            /**\n             * 把参数 汇总一下， 然后转JSON以后序列化成字符串，发送 创建房间的请求\n             */\n            var extparams = {} ;\n            let values = new Array();\n            for(var inx=0 ; inx<self.group.length ; inx++){\n                let groupitem = self.group[inx] ;\n                let value = \"\" ;\n                for(var j=0 ; j<groupitem.groupoptions.length ; j++){\n                    let option = groupitem.groupoptions[j] ;\n                    if(option.checked == true){\n                        if(value != \"\"){\n                            value = value + \",\" ;\n                        }\n                        value = value + option.item.value ;\n                    }\n                }\n                extparams[groupitem.data.code] = value ;\n            }\n            /**\n             * 藏到全局变量里去，进入场景后使用，然后把这个参数置空\n             * @type {{}}\n             */\n            extparams.gametype = self.data.code ;\n            extparams.playway = self.data.id;\n            extparams.gamemodel = \"room\" ;\n            /**\n             * 发送创建房间开始游戏的请求\n             */\n            event.stopPropagation() ;\n            self.preload(extparams , self) ;\n        });\n    },\n    init:function(playway){\n        this.data = playway ;\n        if(this.memo != null && playway.memo!=null && playway.memo!=\"\"){\n            this.memonode.active = true ;\n            this.memo.string = playway.memo ;\n        }else if(this.memonode!=null){\n            this.memonode.active = false ;\n        }\n        if(playway.free == true){\n            this.freeopt.active = true;\n            this.createroom.active = false ;\n        }else{\n            this.freeopt.active = false;\n            this.createroom.active = true ;\n        }\n        if(playway.roomtitle!=null && playway.roomtitle!=\"\"){\n            let frame = this.atlas.getSpriteFrame(playway.roomtitle);\n            if(frame!=null){\n                this.roomtitle.getComponent(cc.Sprite).spriteFrame = frame ;\n            }\n        }\n        if(this.optiongroup!=null && playway.groups!=null){\n            for(var inx = 0 ; inx < playway.groups.length ; inx++){\n                let group = cc.instantiate(this.optiongroup) ;\n\n\n                let playWayGroup = group.getComponent(\"PlaywayGroup\") ;\n                playWayGroup.init(playway.groups[inx] , this.optiongroupitem , playway.items) ;\n                this.group.push(playWayGroup);\n\n                group.parent = this.optionsnode ;\n            }\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        gametype:{\n            default:null ,\n            type : cc.Node\n        },\n        roomoption:{\n            default:null ,\n            type : cc.Prefab\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    init:function(playway){\n        /**\n         * 需要预先请求 在线人数\n         */\n        if(playway){\n            this.data = playway ;\n        }\n        if(playway.code == \"dizhu\"){\n            this.gametype.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(\"斗地主\");\n        }else if(playway.code == \"majiang\"){\n            this.gametype.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(\"广东麻将\");\n        }else if(playway.code == \"poker\"){\n            this.gametype.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(\"德州扑克\");\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        playway: {\n            default: null,\n            type: cc.Prefab\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.playwaypool = new cc.NodePool();\n        for(var i=0 ; i<5 ; i++){ //最大玩法数量不能超过20种\n            this.playwaypool.put(cc.instantiate(this.playway));\n        }\n        this.playwayarray = new Array();\n    },\n    init:function(){\n        /**\n         * 加载预制的 玩法\n         */\n        var gametype = cc.beimi.game.type(data);\n        if(gametype!=null){\n            for(var inx =0 ; inx < gametype.playways.length ; inx++){\n                /**\n                 * 此处需要做判断，检查 对象池有足够的对象可以使用\n                 */\n                var playway = this.playwaypool.get();\n                var script = playway.getComponent(\"Playway\") ;\n                script.init(gametype.playways[inx]);\n                playway.parent = this.content ;\n                this.playwayarray.push(playway) ;\n            }\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\n\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    onClick:function(event , data){\n        if(this.ready()){\n            let socket = this.socket();\n            socket.emit(\"selectcolor\" , data);\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        first: {\n            default: null,\n            type: cc.Node\n        },\n        second: {\n            default: null,\n            type: cc.Node\n        },\n        gamepoint:{\n            default: null,\n            type: cc.Node\n        },\n        title:{\n            default: null,\n            type: cc.Node\n        },\n        global: {\n            default: null,\n            type: cc.Node\n        },\n        playway: {\n            default: null,\n            type: cc.Prefab\n        },\n        content: {\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if(cc.beimi != null && cc.beimi.user != null){\n            this.disMenu(\"first\") ;\n            this.playwaypool = new cc.NodePool();\n            for(var i=0 ; i<20 ; i++){ //最大玩法数量不能超过20种\n                this.playwaypool.put(cc.instantiate(this.playway));\n            }\n            this.playwayarray = new Array();\n            if(this.gamepoint && cc.beimi!=null && cc.beimi.games !=null){\n                for(var inx=0 ; inx < this.gamepoint.children.length ; inx++){\n                    let name = this.gamepoint.children[inx].name ;\n                    var gameenable = false ;\n                    for(var i=0 ; i<cc.beimi.games.length ; i++){\n                        var gamemodel = cc.beimi.games[i] ;\n                        for(var j=0 ; j<gamemodel.types.length ; j++){\n                            let gametype = gamemodel.types[j] ;\n                            if(gametype.code == name){\n                                gameenable = true ; break ;\n                            }\n                        }\n                        if(gameenable == true){break ;}\n                    }\n                    if(gameenable == true){\n                        this.gamepoint.children[inx].active = true ;\n                    }else{\n                        this.gamepoint.children[inx].active = false ;\n                    }\n                }\n            }\n        }\n    },\n    onClick:function(event, data){\n        this.disMenu(\"second\") ;\n        var girlAni = this.global.getComponent(\"DefaultHallDataBind\");\n        girlAni.playToLeft();\n        this._secondAnimCtrl = this.second.getComponent(cc.Animation);\n        this._secondAnimCtrl.play(\"playway_display\");\n\n        if(this.title){\n            for(var inx = 0 ; inx<this.title.children.length ; inx++){\n                if(this.title.children[inx].name == data){\n                    this.title.children[inx].active = true ;\n                }else{\n                    this.title.children[inx].active = false ;\n                }\n\n            }\n        }\n        /**\n         * 加载预制的 玩法\n         */\n        var gametype = cc.beimi.game.type(data);\n        if(gametype!=null){\n            for(var inx =0 ; inx < gametype.playways.length ; inx++){\n                /**\n                 * 此处需要做判断，检查 对象池有足够的对象可以使用\n                 */\n                var playway = this.playwaypool.get();\n                var script = playway.getComponent(\"Playway\") ;\n                if(script == null){\n                    script = playway.getComponent(\"RoomPlayway\") ;\n                }\n                script.init(gametype.playways[inx]);\n                playway.parent = this.content ;\n                this.playwayarray.push(playway) ;\n            }\n        }\n    },\n    onRoomClick:function(){\n        this.disMenu(\"third\") ;\n        this._menuDisplay = this.third.getComponent(cc.Animation);\n        this._menuDisplay.play(\"play_room_display\");\n    },\n    onSecondBack:function(event ,data){\n        var girlAni = this.global.getComponent(\"DefaultHallDataBind\");\n        girlAni.playToRight();\n        this.collect();\n        this.disMenu(\"first\") ;\n    },\n    onThirddBack:function(event ,data){\n        this.disMenu(\"first\") ;\n    },\n    collect:function(){\n        for(var inx =0 ; inx < this.playwayarray.length ; inx++){\n            this.playwaypool.put(this.playwayarray[inx]);\n        }\n        this.playwayarray.splice(0 ,this.playwayarray.length );\n    },\n    disMenu:function(order){\n        if(order == 'first'){\n            this.first.active = true ;\n            this.second.active = false ;\n            if(this.third != null){\n                this.third.active = false ;\n            }\n        }else if(order == 'second'){\n            this.first.active = false;\n            this.second.active = true;\n            if(this.third != null){\n                this.third.active = false ;\n            }\n        }else if(order == 'third'){\n            this.first.active = false;\n            this.second.active = false;\n            if(this.third != null){\n                this.third.active = true ;\n            }\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        music:{\n            default: null,\n            type: cc.Sprite\n        },\n        musicSlider:{\n            default: null,\n            type: cc.Slider\n        },\n        sound:{\n            default: null,\n            type: cc.Sprite\n        },\n        soundSlider:{\n            default: null,\n            type: cc.Slider\n        },\n        musicon:{\n            default: null,\n            type: cc.Node\n        },\n        musicoff:{\n            default: null,\n            type: cc.Node\n        },\n        soundon:{\n            default: null,\n            type: cc.Node\n        },\n        soundoff:{\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.musicSlider.progress = cc.beimi.audio.bgVolume;\n        this.music.fillRange  = cc.beimi.audio.bgVolume ;\n\n        if(cc.beimi.audio.getState() == cc.audioEngine.AudioState.PLAYING){\n            this.musicon.active = true ;\n            this.musicoff.active =  false;\n        }else{\n            this.musicon.active = false ;\n            this.musicoff.active =  true\n        }\n\n    },\n    onMusicSlide:function(slider){\n        this.music.fillRange  = slider.progress ;\n        cc.beimi.audio.setBGMVolume(slider.progress) ;\n        this.musicon.active = true ;\n        this.musicoff.active =  false;\n    },\n    onSoundSlide:function(slider){\n        this.sound.fillRange  = slider.progress ;\n    },\n    onMusiceBtnClick:function(){\n        if(cc.beimi.audio.getState() == cc.audioEngine.AudioState.PLAYING){\n            this.musicon.active = false ;\n            this.musicoff.active =  true;\n            cc.beimi.audio.pauseAll();\n        }else{\n            this.musicon.active = true ;\n            this.musicoff.active =  false;\n            cc.beimi.audio.resumeAll();\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    /**\n     * 记录牌的 特殊属性， 是否刚抓起来的牌，已经玩家位置 ， 右、上、左\n     * @param spec\n     * @param inx\n     */\n    init:function(spec , inx){\n        this.spec = spec ;\n        this.inx = inx ;\n        if(this.spec == true){\n            if(this.inx == 0 || this.inx == 2){\n                this.node.height = this.node.height + 50;\n            }else{\n                this.node.width = this.node.width + 30 ;\n            }\n        }\n    },\n    reinit:function(){\n        if(this.spec == true){\n            if(this.inx == 0 || this.inx == 2){\n                this.node.height = this.node.height - 50;\n            }else{\n                this.node.width = this.node.width - 30 ;\n            }\n        }\n        this.spec = false ;\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    /**\n     * 结算页面上的 背景的 点击事件，主要是用于事件拦截，禁用冒泡\n     * @param event\n     */\n    onBGClick:function(event){\n        event.stopPropagation();\n    },\n    /**\n     * 结算页面上的关闭按钮 的 点击事件 , 关闭按钮 和 继续按钮 功能是一样的，都是继续游戏\n     */\n    onCloseClick:function(){\n        /**\n         * 发射事件到 上一级 处理\n         */\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"close\", true) );\n    },\n    /**\n     * 结算页面上的关闭按钮 的 点击事件 , 关闭按钮 和 继续按钮 功能是一样的，都是继续游戏\n     */\n    onBeginClick:function(){\n        /**\n         * 发射事件到 上一级 处理\n         */\n        this.node.dispatchEvent( new cc.Event.EventCustom(\"begin\", true) );\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        workitem:{\n            default: null,\n            type: cc.Node\n        },\n        myscore:{   //底牌\n            default: null,\n            type: cc.Label\n        },\n        myflag:{\n            default: null,\n            type: cc.Node\n        },\n        player_1:{\n            default: null,\n            type: cc.Node\n        },\n        player_1_flag:{\n            default: null,\n            type: cc.Node\n        },\n        player_1_name:{\n            default: null,\n            type: cc.Label\n        },\n        player_1_score:{\n            default: null,\n            type: cc.Label\n        },\n        player_2:{\n            default: null,\n            type: cc.Node\n        },\n        player_2_flag:{\n            default: null,\n            type: cc.Node\n        },\n        player_2_name:{\n            default: null,\n            type: cc.Label\n        },\n        player_2_score:{\n            default: null,\n            type: cc.Label\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        /**\n         * SummaryClick发射的事件，方便统一处理 / 开始\n         */\n        this.workitem.on(\"begin\",function(event){\n            if(self.context !=null){\n                self.context.summarypage.destroy();\n                /**\n                 * 恢复桌面\n                 */\n                self.context.restart(\"begin\");\n            }\n            event.stopPropagation();\n        });\n        /**\n         * SummaryClick发射的事件，方便统一处理 / 明牌开始\n         */\n        this.workitem.on(\"opendeal\",function(event){\n            if(self.context !=null){\n                self.context.summarypage.destroy();\n                /**\n                 * 恢复桌面，然后发送消息给服务端\n                 */\n                self.context.restart(\"opendeal\");\n            }\n            event.stopPropagation();\n        });\n        /**\n         * SummaryClick发射的事件，方便统一处理 / 开始\n         */\n        this.workitem.on(\"close\",function(event){\n            if(self.context !=null){\n                /**\n                 * 显示操作按钮\n                 */\n                self.context.onCloseClick();\n                self.context.summarypage.destroy();\n            }\n            event.stopPropagation();\n        });\n    },\n    create:function(context , data){\n        this.context = context ;\n        var index = 0 ;\n        for(var inx = 0 ; inx < data.players.length ; inx++){\n            var player = data.players[inx] ;\n            if(player.userid == cc.beimi.user.id){//\n                this.process(player , null  , this.myscore, this.myflag) ;\n            }else{\n                if(index == 0){\n                    this.process(player ,this.player_1_name  , this.player_1_score , this.player_1_flag ) ;\n                }else if(index == 1){\n                    this.process(player ,this.player_2_name  , this.player_2_score , this.player_2_flag ) ;\n                }\n                index = index + 1 ;\n            }\n        }\n    },\n    /**\n     * 显示已经处理完毕的结算信息\n     * @param player\n     * @param username\n     * @param score\n     * @param flag\n     */\n    process:function(player , username , score , flag){\n        if(username != null){\n            username.string = player.username ;\n        }\n        if(player.win == true){\n            score.string = player.score ;\n        }else{\n            score.string = \"-\"+player.score ;\n        }\n\n        if(player.dizhu == true){\n            flag.active = true ;\n        }else{\n            flag.active = false ;\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        target:{\n            default:null ,\n            type : cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.clickstate = false  ;\n    },\n    onClick:function(){\n        let handCards = this.target.getComponent(\"HandCards\")\n        let self = this ;\n        if(this.clickstate == true){\n            //出牌\n            this.node.dispatchEvent( new cc.Event.EventCustom('takecard', true) );\n        }else{\n            if(handCards.take == true){\n                handCards.take = false ;\n                this.target.y = this.target.y - 30 ;\n            }else{\n                handCards.take = true;\n                this.target.y = this.target.y + 30 ;\n            }\n            this.clickstate = true  ;\n            setTimeout(function(){  //双击算法\n                self.clickstate = false ;\n            } , 500) ;\n        }\n    }\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    login:function(){\n        this.io = require(\"IOUtils\");\n        this.loadding();\n        if(this.io.get(\"userinfo\") == null){\n            //发送游客注册请求\n            var xhr = cc.beimi.http.httpGet(\"/api/guest\", this.sucess , this.error , this);\n        }else{\n            //通过ID获取 玩家信息\n            var data = JSON.parse(this.io.get(\"userinfo\")) ;\n            if(data.token != null){     //获取用户登录信息\n                var xhr = cc.beimi.http.httpGet(\"/api/guest?token=\"+data.token.id, this.sucess , this.error , this);\n            }\n        }\n\t},\n    sucess:function(result , object){\n        var data = JSON.parse(result) ;\n        if(data!=null && data.token!=null && data.data!=null){\n            //放在全局变量\n            object.reset(data , result);\n            cc.beimi.gamestatus = data.data.gamestatus ;\n            /**\n             * 登录成功后即创建Socket链接\n             */\n            object.connect();\n            //预加载场景\n            if(cc.beimi.gametype!=null && cc.beimi.gametype != \"\"){//只定义了单一游戏类型 ，否则 进入游戏大厅\n                object.scene(cc.beimi.gametype , object) ;\n            }else{\n                /**\n                 * 暂未实现功能\n                 */\n            }\n        }\n    },\n    error:function(object){\n        object.closeloadding(object.loaddingDialog);\n        object.alert(\"网络异常，服务访问失败\");\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        username:cc.EditBox,\n\t\tpassword:cc.EditBox\n    },\n\tonLoad: function () {\t\t\n\t\tthis._prefab = cc.find(\"Canvas/login\");\n    },\n\tsubmit:function(){\n\t\tif(!this.username.string == \"\" && !this.password.string == \"\"){\n\t\t\tthis._prefab.destroy();\n\t\t\tif(cc.beimi.loadding.size() > 0){\n\t\t\t\tlet loadding = cc.beimi.loadding.get();\n\t\t\t\tlet root = cc.find(\"Canvas\");\n\t\t\t\tloadding.parent = root ;\n\t\t\t\tthis._animCtrl = loadding.getComponent(cc.Animation);\n\t\t\t\tvar animState = this._animCtrl.play(\"loadding\");\n\t\t\t\tanimState.wrapMode = cc.WrapMode.Loop;\n\t\t\t}\n\t\t\t/*\n\t\t\tvar xhr = cc.tools.http.httpPost(\"/api/login\",{mobile:this.username.string , password:this.password.string},function(ret){\n\t\t\t\tcc.tools.http.authorization = ret ;\n\t\t\t\t\n\t\t\t\t *获取注册或登录结果，如果密码验证通过，则登录成功，如果无用户，则直接注册成功\n\t\t\t\t *\n\t\t\t\t *\n\t\t\t\t \n\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t},\n\tguest:function(){\n\t\n\t}\t\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _progress:0.0,\n        _splash:null,\n        _isLoading:false,\n        loaddingPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        alertPrefab: {\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if(!cc.sys.isNative && cc.sys.isMobile){\n            var canvas = this.node.getComponent(cc.Canvas);\n            canvas.fitHeight = true;\n            canvas.fitWidth = true;\n        }\n        let win = cc.director.getWinSize() ;\n        cc.view.setDesignResolutionSize(win.width, win.height, cc.ResolutionPolicy.EXACT_FIT);\n        this.initMgr();\n\n    },\n    start:function(){        \n        var self = this;\n        var SHOW_TIME = 3000;\n        var FADE_TIME = 500;\n        /***\n         * \n         * 控制登录界面或者广告首屏界面显示时间\n         * \n         */\n    },\n    initMgr:function(){\n        if(cc.beimi == null){\n            /**\n             * 增加了游戏全局变量控制，增加了 cc.beimi.gamestatus 参数，可选值：ready|notready|playing\n             * @type {{}}\n             */\n            cc.beimi = {};\n            cc.beimi.routes = {} ;\n            cc.beimi.event = {}\n            cc.beimi.http = require(\"HTTP\");\n            cc.beimi.seckey = \"beimi\";\n            cc.beimi.gamestatus = \"none\" ;\n\n\n\n\n            cc.beimi.dialog = null ;   //弹出的提示对话框，  alert\n\n            cc.beimi.openwin = null ;  //弹出的对话窗口，    设置、玩法、战绩等等\n\n            cc.beimi.loadding = new cc.NodePool();\n            cc.beimi.loadding.put(cc.instantiate(this.loaddingPrefab)); // 创建节点\n\n            cc.beimi.dialog = new cc.NodePool();\n            cc.beimi.dialog.put(cc.instantiate(this.alertPrefab)); // 创建节点\n\n            /**\n             * 游客登录，无需弹出注册对话框，先从本地获取是否有过期的对话数据，如果有过期的对话数据，则使用过期的对话数据续期\n             * 如果没有对话数据，则重新使用游客注册接口\n             */\n            // this.loginFormPool = new cc.NodePool();\n            // this.loginFormPool.put(cc.instantiate(this.prefab)); // 创建节点\n            cc.beimi.game = {\n                model : null ,\n                playway : null,\n                type:function(name){\n                    var temp ;\n                    if(cc.beimi.games !=null){\n                        for(var i=0 ; i<cc.beimi.games.length ; i++){\n                            var gamemodel = cc.beimi.games[i] ;\n                            for(var inx = 0 ; inx < gamemodel.types.length ; inx++){\n                                var  type = gamemodel.types[inx] ;\n                                if(type.code == name){\n                                    temp = type ;\n                                }\n                            }\n                        }\n                    }\n                    return temp ;\n                }\n            };\n\n            var Audio = require(\"Audio\");\n            cc.beimi.audio = new Audio();\n            cc.beimi.audio.init();\n\n            var SocketIO = require(\"socket.io\");\n            window.io = new SocketIO();\n\n            cc.beimi.audio.playBGM(\"bgMain.mp3\");\n\n            cc.Button.prototype.touchEndedClone = cc.Button.prototype._onTouchEnded ;\n            cc.Button.prototype._soundOn = true ;\n            cc.Button.prototype.setSoundEffect = function(on){\n                this._soundOn = on ;\n            }\n            cc.Button.prototype._onTouchEnded = function(event){\n                if(this.interactable && this.enabledInHierarchy && this._pressed && this._soundOn == true){\n                    /**\n                     * 播放声效\n                     */\n                    cc.beimi.audio.playSFX(\"select.mp3\");\n                }\n                this.touchEndedClone(event) ;\n            }\n        }\n    }\n\n});\n","var beiMiCommon = require(\"BeiMiCommon\") ;\ncc.Class({\n    extends: beiMiCommon,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // .\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.node.on(cc.Node.EventType.TOUCH_START, function(e){\n            e.stopPropagation();\n        });\n    },\n    onCloseClick:function(){\n        /**\n         * *  对象池返回， 释放资源 ，  同时 解除 事件绑定\n         *\n         * */\n        let common = this.getCommon(\"common\");\n        if(common!=null){\n        \tcommon.loginFormPool.put(common.dialog) ;\n        }\n    }\n});\n","cc.Class({\r    extends: cc.Component,\r\r    properties: {\r\r    },\r\r    connect:function(url , options){\r        let self = this ;\r        this.ws = new WebSocket(url+\"?userid=\"+cc.beimi.user.id);\r        this.ws.onopen = function (event) {\r            console.log(\"Send Text WS was opened.\");\r        };\r        this.ws.onmessage = function (event) {\r            var data = self.parse(event.data) ;\r            if(data!=null && data.event != null){\r                cc.beimi.event[data.event](event.data);\r            }\r            console.log(\"response text msg: \" + event.data);\r        };\r        this.ws.onerror = function (event) {\r            console.log(\"Send Text fired an error\");\r        };\r        this.ws.onclose = function (event) {\r            console.log(\"WebSocket instance closed.\");\r        };\r        return this;\r    },\r    on:function(command , func){\r        cc.beimi.event[command] =  func ;\r    },\r    exec:function(command , data){\r        if (this.ws.readyState === WebSocket.OPEN) {\r            data.command = command;\r            data.userid = cc.beimi.user.id ;\r            data.orgi = cc.beimi.user.orgi ;\r            data.token = cc.beimi.authorization ;\r            this.ws.send(JSON.stringify(data));\r        }\r    },\r    emit:function(command , data){\r        let param = {\r            data : data\r        } ;\r        this.exec(command , param) ;\r    },\r    disconnect:function(){\r\r    },\r    parse:function(result){\r        return JSON.parse(result) ;\r    },\r});\r"],"sourceRoot":"/source/","file":"project.js"}